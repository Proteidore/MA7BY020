{
  "hash": "952ec01ef50f37fe53f0ae80b8a3fce2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hmw I : Tables and visualization\"\ndate: \"2025-01-13\"\n\nengine: knitr\n---\n\n\n\n::: {.callout-important}\n\n- Due : February 7, 2025\n- Work in pairs\n- Deliver your work as a `qmd` file through a github {{< fa brands github >}} repository\n- Use the `quarto` package for reproducible research\n- The report should be rendered at least in HTML format, and possibly also in PDF format\n\n:::\n\n### {{< fa map >}} Objectives\n\nThis homework is dedicated to table wrangling and visualization.\n\n[OECD](https://data.oecd.org) offers detailed statistics at different territorial levels.\n\nUsing data gathered from [OECD](https://data.oecd.org), build  dataframes with a gapminder-like schema (territorial units/timestamps as  keys, statistics for other columns). Using `ggplot2` and `plotly`, design plots and  animations like the \\[Rossling address to BBC\\]().\n\nYour data and graphical pipelines should be designed so that they can be at least partially reused to perform gapminder-like animations with other kind of data gathered from OECD. For example one, could replace life expectancy at birth by life expectancy at 60, infant mortality, or any other health index. One could replace GDP per capita with social expenditure per capita, or something like that.\n\nYour deliverable shall consist in a `qmd` file that can be rendered in HTML format.\n\nYou shall describe the downloaded data.\n\nPlots shall be endowed with titles, legends and captions,\n\nData pipelines and graphical pipelines shall be given in an appendix.\n\n### {{< fa database >}} Data\n\nData have to be downloaded from <https://data.oecd.org> (the old site <https://stats.oecd.org> which could be drilled using package `OECD` is shutting down).\n\n::: {.columns}\n::: {.column width=\"60%\"}\n\nUse [OECD Data explorer](https://www.oecd.org/en/data/datasets/oecd-DE.html) to find the data you need.\nFollow the guidleines given in the [OECD Data Explorer API](https://data.oecd.org/api/sdmx-json-documentation/).\n\n\n\n{{< video \"https://www.youtube.com/watch?v=AizMXcgvbvQ&t=10s\" >}}\n\n\n\n\n:::\n\n::: {.column width=\"5%\"}\n\n:::\n\n::: {.column width=\"35%\"}\n\nOnce you have decided which data you need, you shall build an extraction pipeline using `httr` and `rvest` to download the data or tools from [`OECD` package](https://github.com/expersso/OECD). \n\n{{< fa hand-point-right >}} Table wrangling should be performed using `tidyverse` tools.\n\n{{< fa hand-point-right >}} Your extraction pipeline shall be reproducible and shall be given in an appendix.\n\n:::\n:::\n\n\n\n\n{{< fa hand-point-right >}} Keep the downloaded data in a separate subdirectory. Your working directory (working tree) should look like something like that:\n\n\n\n\n```{.default}\n.\n├── .git/\n├── DATA/\n│   ├── OECD.foo.csv\n│   ├── OECD.foobar.csv\n│   ├── OECD.bar.csv\n|   :\n├── _extensions/\n├── _outdir/\n├── _metadata.yml\n├── _quarto.yml\n├── my_report.qmd\n├── :\n└── README.md\n```\n\n\n\n\n\n\n## {{< fa chart-bar >}} Report organization\n\nThe first part  (introduction) of the report shall be dedicated to the description of the data you have downloaded. You shall motivate your choice and non-trivial aspects  of the data (for example if you were discussing GDP per capita against Life expectancy, you should remind the reader about the definition of Life expectancy and GDP). You shall also give a hint about why you intend to plot some variables against others.\n\nThe second part (results) shall be dedicated to plots and animations. Commenting a plot is not paraphrasing. It consists in adding informations and explanations that are not already in and around the plot (this includes the plot itself, title, subtitle, caption, and guides). It also consists in questions and issues that the plot raises. For example, in the Gapminder presentation, the apparent connection between life expectancy and GDP per capita deserves to be discussed (is it stationary? is it homogeneous throughout continents ? ...). Refrain from overplaying your hand: yours plots are not likely to provide causal explanations. Comment the data, all the data, and nothing but the data.\n\nThe third part is the appendix. The first two parts should be text and plots only. The third part should be code only.\n\nThe appendix shall be dedicated to the description of the data wrangling pipeline. You shall give the code. \n\nYou shall also give the code of the graphical pipelines in the appendix.\n\nYou shall avoid copy-paste coding. Don't Repeat Yourself. The `tidyverse` is your friend. `knitr` provide the tools to organize the Quarto file so that you can write your code once and use it many times, once for data wrangling and plotting (without echoing), then for listing and explanation.\n\n::: {.callout-tip}\n\n### Tip for organizing the report \n\nLook at [fake report](/core/projects/fake_report.qmd) organized along this principles. Note that works with the `knitr` engine.\n\nHave a look at [Rmarkdown the definitive guide](https://bookdown.org/yihui/rmarkdown/) to leanr about `knitr` tricks.\n\nThis trick is described in [Section 4.19](https://bookdown.org/yihui/rmarkdown-cookbook/code-appendix.html)\n\n:::\n\n\n## {{< fa graduation-cap >}} Grading criteria\n\n\n\n| Criterion | Points  | Details |\n|:----------|:-------:|:--------|\n|Narrative, spelling and syntax | 25% | English/French {{<  fa pen-fancy >}}|\n|Plots correction | 20% | choice of `aesthetics`, `geom`, `scale` ... {{<  fa chart-area >}}|\n|Plot style | 15% | Titles, legends, labels, breaks ... {{<  fa chart-area >}} |\n|Table wrangling | 15% | ETL, SQL like manipulations {{<  fa database >}} |\n|Computing Statistics | 5% | Aggregations, LR, PCA, CA, ... {{<  fa chart-area >}} |\n|DRY compliance | 20% | DRY principle at {{<  fa brands  wikipedia-w  >}} [ Wikipedia ](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself)|\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}