{
  "hash": "19c9af858ae15cd47d3519b49d506c54",
  "result": {
    "engine": "knitr",
    "markdown": "---\ndate: \"2025-03-10 22:13:17.928393\"\ntitle: \"LAB: Principal Component Analysis\"\n\n\nexecute:\n  echo: true\n  eval: true\n  collapse: true\n\nformat:\n  html:\n    output-file: lab-pca.html\n  pdf:\n    output-file: lab-pca.pdf\n\n\nengine: knitr\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# We will use the following packages. \n# If needed, install them : pak::pkg_install(). \nstopifnot(\n  require(\"magrittr\"),\n  require(\"lobstr\"),\n  require(\"ggforce\"),\n  require(\"patchwork\"), \n  require(\"gt\"),\n  require(\"glue\"),\n  require(\"skimr\"),\n  require(\"corrr\"),\n  require(\"GGally\"),\n  require(\"broom\"),\n  require(\"tidyverse\"),\n  require(\"ggfortify\"),\n  require(\"autoplotly\")\n\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nold_theme <- theme_set(theme_minimal())\n```\n:::\n\n\n\n\n\n\n::: {layout=\"[80,20]\"}\n\n::: {#first-column}\n\n|                            |\n|:---------------------------|\n| {{< var curriculum >}}     |\n| {{< var university >}}     |\n| Année {{< var year >}}     |\n| {{< var homepage >}}       |\n| {{< var moodle >}}         |\n\n\n::: \n\n::: {#second-column}\n![](/images/UniversiteParis_monogramme_couleur_RVB.png){align=\"right\" style=\"size:50px;\" width=75}\n:::\n\n:::\n\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n\nSwiss fertility data\n====================\n\nDataset  `swiss`  from `datasets::swiss` connect [fertility](https://en.wikipedia.org/wiki/Total_fertility_rate) and\nsocial, economic data within 47 French-speaking districts in [Switzerland](https://en.wikipedia.org/wiki/Switzerland).\n\n-   `Fertility` : fertility index\n-   `Agriculture` : jobs in agricultural sector\n-   `Examination` : literacy index (military examination)\n-   `Education` : proportion of people with successful secondary education\n-   `Catholic` : proportion of Catholics\n-   `Infant.Mortality` : mortality quotient at age 0\n\nFertility index (`Fertility`) is considered as the *response variable*\n\nThe social and economic variables are *covariates* (*explanatory* variables).\n\nSee [European Fertility Project](https://pop.princeton.edu/european-fertility-project#:-:text=switzerland) for more on this dataset.\n\n![](/images/Karte_Bezirke_der_Schweiz_farbig_2018.png)\n\n\nPCA (Principal Component Analysis) is concerned with covariates.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"swiss\")\n\nswiss %>% \n  glimpse(50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 47\nColumns: 6\n$ Fertility        <dbl> 80.2, 83.1, 92.5, 85.8,~\n$ Agriculture      <dbl> 17.0, 45.1, 39.7, 36.5,~\n$ Examination      <int> 15, 6, 5, 12, 17, 9, 16~\n$ Education        <int> 12, 9, 5, 7, 15, 7, 7, ~\n$ Catholic         <dbl> 9.96, 84.84, 93.40, 33.~\n$ Infant.Mortality <dbl> 22.2, 22.2, 20.2, 20.3,~\n```\n\n\n:::\n:::\n\n\n\n\n\n\nHave a look at the documentation of the dataset\n\n\n\n\n\n\n\n\n\n\n\n\n# Describe the dataset\n\n::: {.callout-note title=\"Question\"}\n\nCompute summary for each variable\n\n:::\n\n::: {.content-visible when-profile=\"solution\"} \n\n::: {.callout-tip title=\"solution\"} \n\nIt is enough to call `summary()` on each column of `swiss`. \nThis can be done in a functional programming style using package `purrr`. \nThe collections of summaries can be rearranged so as to build a dataframe that is \nfit for reporting.  \n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntt <- map_dfr(swiss, summary, .id = \"var\")  \n```\n:::\n\n\n\n\n\n\n::: {.content-visible when-format=\"html\"}\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntt |> \n  gt::gt() |> \n  gt::fmt_number(decimals=1)\n```\n:::\n\n\n\n\n\n:::\n\n::: {.content-visible when-format=\"pdf\"}\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntt %>% \n  knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n|var              |  Min.| 1st Qu.| Median|     Mean| 3rd Qu.|  Max.|\n|:----------------|-----:|-------:|------:|--------:|-------:|-----:|\n|Fertility        | 35.00|  64.700|  70.40| 70.14255|  78.450|  92.5|\n|Agriculture      |  1.20|  35.900|  54.10| 50.65957|  67.650|  89.7|\n|Examination      |  3.00|  12.000|  16.00| 16.48936|  22.000|  37.0|\n|Education        |  1.00|   6.000|   8.00| 10.97872|  12.000|  53.0|\n|Catholic         |  2.15|   5.195|  15.14| 41.14383|  93.125| 100.0|\n|Infant.Mortality | 10.80|  18.150|  20.00| 19.94255|  21.700|  26.6|\n\n\n:::\n:::\n\n\n\n\n\n:::\n\nFunction `skim` from `skimr`  delivers all univariate summaries in proper form. \n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfoo <- swiss %>% \n  select(-Fertility) %>% \n  skim()  \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfoobar <- foo %>%  \n  filter(skim_type==\"numeric\") %>% \n  rename(variable=skim_variable)  %>% \n    mutate(across(where(is.numeric), ~ round(.x, digits=1))) \n```\n:::\n\n\n\n\n\n\n::: {.content-visible when-format=\"html\"}\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfoobar %>% \n  gt::gt() \n```\n:::\n\n\n\n\n\n\n:::\n\n::: {.content-visible when-format=\"pdf\"}\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfoobar %>% \n  knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n|skim_type |variable         | n_missing| complete_rate| numeric.mean| numeric.sd| numeric.p0| numeric.p25| numeric.p50| numeric.p75| numeric.p100|numeric.hist |\n|:---------|:----------------|---------:|-------------:|------------:|----------:|----------:|-----------:|-----------:|-----------:|------------:|:------------|\n|numeric   |Agriculture      |         0|             1|         50.7|       22.7|        1.2|        35.9|        54.1|        67.7|         89.7|▃▃▆▇▅        |\n|numeric   |Examination      |         0|             1|         16.5|        8.0|        3.0|        12.0|        16.0|        22.0|         37.0|▅▇▆▂▂        |\n|numeric   |Education        |         0|             1|         11.0|        9.6|        1.0|         6.0|         8.0|        12.0|         53.0|▇▃▁▁▁        |\n|numeric   |Catholic         |         0|             1|         41.1|       41.7|        2.1|         5.2|        15.1|        93.1|        100.0|▇▁▁▁▅        |\n|numeric   |Infant.Mortality |         0|             1|         19.9|        2.9|       10.8|        18.1|        20.0|        21.7|         26.6|▁▂▇▆▂        |\n\n\n:::\n:::\n\n\n\n\n\n:::\n\n:::\n:::\n\n\n- Display graphic summary for each variable.\n\n::: {.content-visible when-profile=\"solution\"} \n\n::::: {.callout-tip title=\"solution\"} \n\nWe have to pick some graphical summary of the data. Boxplots and violine plots could be used if we look for concision.\n\nWe use histograms to get more details about each column. \n\nNot that covariates have different meanings:  `Agriculture`, `Catholic`, `Examination`, and `Education` are percentages with values between $0$ and $100$.  \n\nWe have no details about the standardized fertility index `Fertility`\n\n`Infant.Mortality` is also a rate:  \n\n> Infant mortality is the death of an infant before his or her first birthday. The infant mortality rate is the number of infant deaths for every 1,000 live births. In addition to giving us key information about maternal and infant health, the infant mortality rate is an important marker of the overall health of a society.\n\nsee [Center for Desease Control](https://www.cdc.gov/reproductivehealth/maternalinfanthealth/infantmortality.htm)\n\nWe reuse the function we have already developped during previous sessions.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmake_biotifoul(swiss, .f = is.numeric)\n```\n\n::: {.cell-output-display}\n![](lab-pca_files/figure-pdf/unnamed-chunk-13-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nHistograms reveal that our covariates have very different distributions. \n\nReligious affiliation (`Catholic`) tells us that there two types of districts, which is  reminiscent of the old principle *Cujus regio, ejus religio* , see [Old Swiss Confederacy](https://en.wikipedia.org/wiki/Old_Swiss_Confederacy). \n\n`Agriculture` shows that in most districts, agriculture was still a very important activity.\n\n`Education` reveals that in all but a few districts, most children did not receive secondary education. `Examination` shows that some districts lag behind the bulk of districts. Even less exhibit a superior performance.\n\nThe two demographic variables `Fertility`  and `Infant.Mortality` look roughly unimodal with a few extreme districts.\n\n\n\n:::::\n\n:::\n\n# Investigate correlations\n\nCompute, display and comment the sample correlation matrix.\n\nDisplay jointplots for each pair of variables.\n\n::: {.content-visible when-profile=\"solution\"} \n\n::::: {.callout-tip title=\"solution\"} \n\nPackage `corrr`, functions `correlate` and `rplot` provide a conveniemt tool.\n\nNote that `rplot()` creates a graphical object of class `ggplot`.\nWe can endow it with more layers.  \n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncorrr::correlate(swiss) %>% \n  corrr::rplot() %>% +\n  ggtitle(\"Correlation plot for Swiss Fertility data\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCorrelation computed with\n* Method: 'pearson'\n* Missing treated using: 'pairwise.complete.obs'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](lab-pca_files/figure-pdf/unnamed-chunk-14-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nThe high positive linear correlation between `Education` and `Examination` is moderately surprising. The negative correlation between the proportion of people involved in `Agriculture` and `Education` and `Examination`is also not too surprising. Secondary schooling required pupils from rural areas to move to  cities. \n\nA more intriguing observation concerns the pairs `Catholic` and `Examination` (negative correlation) and `Catholic`  and `Education` (little correlation). \n\nThe response variable `Fertility` looks negatively correlated with `Examination` an `Education`. These correlations are worth being further explored. In Demography, the decline of Fertility is often associated with the the rise of women education. Note that `Examination` is about males, and that `Education` does not give details about the way women complete primary education. \n\n\n\n\n:::::\n\n\n\n:::\n\n## Perform PCA on covariates\n\n::: {.callout-note title=\"Question\"}\n\nPairwise analysis did not provide us with a clear and simple picture of the French-speaking districts. \n\n\nPlay with centering and scaling \n\n:::\n\n::: {.content-visible when-profile=\"solution\"} \n\nWe first call `prcomp()` with the default arguments for centering and scaling, that is, we center columns and do not attempt to standardize columns.   \n\n\n::::: {.callout-tip title=\"solution\"} \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npco <- swiss |> \n  select(-Fertility) |> \n  prcomp()\n```\n:::\n\n\n\n\n\n\n \n\n:::::\n\n\n\n:::\n\n\n::: {.content-visible when-profile=\"solution\"} \n\n::::: {.callout-tip title=\"solution\"} \n\nHand-made centering of the dataframe\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nX <- select(swiss, -Fertility)\n\nn <- nrow(X)\n\nY <-  (X - matrix(1, nrow = n, ncol=1) %*%  rep(1/n,n) %*% as.matrix(X)) \n\nY <- as.matrix(Y)\n```\n:::\n\n\n\n\n\n\n::: {.content-visible when-format=\"html\"}\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(var=names(X), mX=colMeans(X), mY=colMeans(Y))  %>% \n  mutate(across(where(is.numeric), ~ round(.x, digits=2))) %>% \n  gt::gt()\n```\n:::\n\n\n\n\n\n:::\n\n::: {.content-visible when-format=\"pdf\"}\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(var=names(X), mX=colMeans(X), mY=colMeans(Y))  %>% \n  mutate(across(where(is.numeric), ~ round(.x, digits=2))) %>% \n knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n|var              |    mX| mY|\n|:----------------|-----:|--:|\n|Agriculture      | 50.66|  0|\n|Examination      | 16.49|  0|\n|Education        | 10.98|  0|\n|Catholic         | 41.14|  0|\n|Infant.Mortality | 19.94|  0|\n\n\n:::\n:::\n\n\n\n\n\n:::\n\n\n\n:::::\n\n::::: {.callout-tip}\n\nFunction `scale(X, scale=F)` from base `R` does the job.\n\n:::::\n\n\n:::\n\n\n::: {.content-visible when-profile=\"solution\"} \n\n::::: {.callout-tip title=\"solution\"} \n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsvd_Y <-  svd(Y)\n\nsvd_Y %$% \n  (as.matrix(Y) - u %*% diag(d) %*% t(v)) %>% \n  norm(type = \"F\")   # <1> checking the factorization\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.445535e-13\n```\n\n\n:::\n\n```{.r .cell-code}\nnorm( diag(1, ncol(Y)) - \n  (svd_Y %$% (t(v) %*% v)), 'F')  # <2> checking that colomns of `v` frm an orthonormal family. \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 9.589856e-16\n```\n\n\n:::\n:::\n\n\n\n\n\n\n:::::\n\n::::: {.callout-tip}\n\nNote that we used the exposing pipe `%$%` from `magrittr` to unpack `svd_Y` which is a list with class `svd`  and members named `u`, `d` and `v`. \n\nWe could have used `with(,)` from base `R`. \n\n\n:::::\n\n:::\n\n::: {.content-visible when-profile=\"solution\"}\n\n::::: {.callout-tip title=\"solution\"} \n\nThe matrix $1/n Y^T \\times Y$ is the covariance matrix\nof the covariates. The spectral decomposition of the symmetric Semi Definite Positive (SDP) matrix  $1/n Y^T \\times Y$ is related with the \nSVD factorization of $Y$. \n\nThe spectral decomposition of $Y^T \\times Y$ can be obtained using `eigen`. \n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(t(eigen(t(Y) %*% Y )$vectors) %*% svd_Y$v ) %>% \n  round(digits=2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    0    0    0    0\n[2,]    0   -1    0    0    0\n[3,]    0    0    1    0    0\n[4,]    0    0    0    1    0\n[5,]    0    0    0    0    1\n```\n\n\n:::\n:::\n\n\n\n\n\n\n::: {.callout-caution}\n\nHere, the eigenvectors of $Y^T \\times Y$ coincide with the right singular vectors of $Y$ corresponding to non-zero singular values. Up to sign changes, it is always true when the  non-zero singular values are pairwise distinct. \n\n:::\n\n\nNow we check that `prcomp` is indeed a wrapper for `svd`.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(Y - pco$x %*% t(pco$rotation )) %>% \n  round(digits = 2)  %>% \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             Agriculture Examination Education Catholic Infant.Mortality\nCourtelary             0           0         0        0                0\nDelemont               0           0         0        0                0\nFranches-Mnt           0           0         0        0                0\nMoutier                0           0         0        0                0\nNeuveville             0           0         0        0                0\nPorrentruy             0           0         0        0                0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(svd_Y$v %*% t(pco$rotation )) %>% \n  round(2) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Agriculture Examination Education Catholic Infant.Mortality\n[1,]           1           0         0        0                0\n[2,]           0           1         0        0                0\n[3,]           0           0         1        0                0\n[4,]           0           0         0        1                0\n[5,]           0           0         0        0                1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(t(pco$x) %*% pco$x) %>% \n  round(2)  \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         PC1      PC2     PC3    PC4    PC5\nPC1 86484.49     0.00    0.00   0.00   0.00\nPC2     0.00 21127.44    0.00   0.00   0.00\nPC3     0.00     0.00 2706.14   0.00   0.00\nPC4     0.00     0.00    0.00 639.22   0.00\nPC5     0.00     0.00    0.00   0.00 348.01\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n:::::\n\n:::\n\n::: {.content-visible when-profile=\"solution\"} \n\n::::: {.callout-tip title=\"solution\"} \n\nObjects of class `pca` can be handled by generic functions like `plot`.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(pco)\n```\n\n::: {.cell-output-display}\n![](lab-pca_files/figure-pdf/unnamed-chunk-24-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nThe displayed plot is the so-called *screeplot*, it provides information about the approximation of the decomposedmatrix by its truncated SVDs.\n\n:::::\n:::\n\n\n::: {.content-visible when-profile=\"solution\"} \n\n::::: {.callout-tip title=\"solution\"} \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_screeplot <- . %>%   # <1>\n  tidy(matrix=\"pcs\") %>% { \n  ggplot(.) +\n  aes(x=PC, y=percent, label=format(1.-cumulative,2)) +   # <3>\n  geom_text(angle=45, vjust=-1, hjust=-0.1) + \n  geom_col(fill=NA, colour=\"black\") # <2>\n  }\n```\n:::\n\n\n\n\n\n\n1. Define a pipeline for building a screeplot\n2. Mind the braces on the right side of the first pipe\n3. `1- percent` tell the reader about the relative Frobenious error achieved by keeping the first components of the SVD expansion. \n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npco %>% \n  p_screeplot() +\n  labs(\n    title=\"Screeplot for swiss fertility data\",\n    subtitle=\"Keeping the first two components is enough to achieve relative Froebenius relative error 3.3%\")\n```\n\n::: {.cell-output-display}\n![](lab-pca_files/figure-pdf/unnamed-chunk-26-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n:::::\n\n:::\n\nProject the dataset on the first two principal components (perform dimension reduction) and build a scatterplot. Colour the points according to the value of original covariates.  \n\n::: {.content-visible when-profile=\"solution\"} \n::: {.callout-tip title=\"solution\"} \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <-  pco %>% # <1>\n  augment(swiss) %>% \n  ggplot() +\n  aes(x=.fittedPC1, y=.fittedPC2, label=.rownames) +\n  geom_point() +\n  coord_fixed() +  # <2>  \n  ggrepel::geom_text_repel() \n\n(p + \n  aes(color=Infant.Mortality)) +\n(p + \n   aes(color=Education)) +\n(p + \n   aes(color=Examination)) +\n(p + \n   aes(color=Catholic)) +\n(p + \n   aes(color=Agriculture)) +\n(p + \n   aes(color=Fertility)) +  \nplot_layout(ncol = 2) +\nplot_annotation(title=\"Swiss data on first two PCs\" , \n                subtitle = \"centered, unscaled\")\n```\n\n::: {.cell-output-display}\n![](lab-pca_files/figure-pdf/unnamed-chunk-27-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n:::\n:::\n\n::: {.content-visible when-profile=\"solution\"} \n::: {.callout-tip title=\"solution\"} \n\nWe can extract factor $V$ from the SVD factorization \nusing generic function `tidy` from package `broom`\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npco %>% \n  tidy(matrix=\"v\") %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 25\nColumns: 3\n$ column <chr> \"Agriculture\", \"Agriculture\", \"Agriculture\", \"Agriculture\", \"Ag~\n$ PC     <dbl> 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, ~\n$ value  <dbl> 0.28151505, -0.88377692, -0.36961938, -0.02652821, -0.04863543,~\n```\n\n\n:::\n:::\n\n\n\n\n\n\nThe result is a tibble in *long form*. It is worth pivoting the dataframe  \n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npco %>% \n  tidy(matrix=\"v\") %>% \n  pivot_wider(id_cols =column, \n              names_from = PC, \n              values_from = value)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 x 6\n  column               `1`     `2`      `3`     `4`     `5`\n  <chr>              <dbl>   <dbl>    <dbl>   <dbl>   <dbl>\n1 Agriculture       0.282  -0.884  -0.370   -0.0265 -0.0486\n2 Examination      -0.121   0.174  -0.450   -0.867   0.0332\n3 Education        -0.0584  0.311  -0.807    0.485  -0.117 \n4 Catholic          0.950   0.303   0.00166 -0.0715  0.0223\n5 Infant.Mortality  0.0105  0.0193  0.0985  -0.0867 -0.991 \n```\n\n\n:::\n:::\n\n\n\n\n\n\nThink of the rows of `swiss` as vectors. Then matrix `v`\nIn wide form, we readily access to the decomposition of the or \n:::\n:::\n\n::: {.content-visible when-profile=\"solution\"} \n::: {.callout-tip title=\"solution\"} \n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprep_co_circle <-  . %>%  \n  tidy(matrix=\"v\") %>%  \n  pivot_wider(id_cols =column, \n              names_from = PC, \n              values_from = value)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nco_circle_ppl <-  (\n    pco %>% \n    prep_co_circle() %>% \n    filter(F)\n    ) %>% \n  ggplot() +\n  aes(x=`1`, y=`2`, label=column) +\n  geom_segment(aes(xend=0, yend=0), arrow = grid::arrow(ends = \"first\")) +\n  ggrepel::geom_text_repel() +\n  coord_fixed() +\n  xlim(c(-1.1, 1.1)) + ylim(c(-1.1, 1.1))  +\n  annotate(\"path\",\n   x=0+1*cos(seq(0,2*pi,length.out=100)),\n   y=0+1*sin(seq(0,2*pi,length.out=100)), linetype=\"dashed\") \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nco_circle_ppl %+% (\n  pco %>% \n  prep_co_circle()\n  )  +\n  ggtitle(\"Swiss, correlation circle\", \n          subtitle = \"centered, unscaled\")\n```\n\n::: {.cell-output-display}\n![](lab-pca_files/figure-pdf/unnamed-chunk-31-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# pco %$% {\n#   ifelse(!is.null(center), \"centered\", \"not centered\") ;\n#   ifelse(!is.null(scale), \"scaled\", \"not scaled\")\n# }\n```\n:::\n\n\n\n\n\n:::\n:::\n\n::: {.content-visible when-profile=\"solution\"} \n::: {.callout-tip title=\"solution\"} \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npco2 <- select(swiss, -Fertility) %>% \n prcomp(scale. = T)\n\nco_circle_ppl %+% (\n  pco2 %>% \n  prep_co_circle()\n  )  +\n  ggtitle(\"Swiss, correlation circle\", \n          subtitle = \"centered, scaled\")\n```\n\n::: {.cell-output-display}\n![](lab-pca_files/figure-pdf/unnamed-chunk-32-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n:::\n:::\n\n\n\n# Sanity checks \n\n- $X$ : data matrix after column centering (use `scale(., center=T, scale-F)`)\n\n\n$$X$$\n\n::: {.content-visible when-profile=\"solution\"} \n\n::::: {.callout-tip title=\"solution\"} \n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nX <-  as.matrix(select(swiss, -Fertility)) |> \n  scale(center = T, scale=F)\n\n# check centering, spot the difference in variances \nX |>  \n  as_tibble() |> \n  summarise(across(everything(), c(var, mean)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 x 10\n  Agriculture_1 Agriculture_2 Examination_1 Examination_2 Education_1\n          <dbl>         <dbl>         <dbl>         <dbl>       <dbl>\n1          516.      2.64e-15          63.6     -1.51e-16        92.5\n# i 5 more variables: Education_2 <dbl>, Catholic_1 <dbl>, Catholic_2 <dbl>,\n#   Infant.Mortality_1 <dbl>, Infant.Mortality_2 <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\n# should be 0\nnorm(X  %*% pco$rotation - pco$x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\n# check the left singular vectors\npco$x %*% diag((pco$sdev)^(-1)) |> \n  as_tibble() |> \n  summarise(across(everything(), c(mean,var)))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The `x` argument of `as_tibble.matrix()` must have unique column names if\n`.name_repair` is omitted as of tibble 2.0.0.\ni Using compatibility `.name_repair`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 x 10\n      V1_1  V1_2      V2_1  V2_2      V3_1  V3_2      V4_1  V4_2     V5_1  V5_2\n     <dbl> <dbl>     <dbl> <dbl>     <dbl> <dbl>     <dbl> <dbl>    <dbl> <dbl>\n1 9.45e-17     1 -1.36e-16     1 -9.32e-17  1.00 -1.71e-17     1 5.38e-16     1\n```\n\n\n:::\n\n```{.r .cell-code}\n# \npco$rotation %*% (diag((pco$sdev)^(-2)) %*% t(pco$x) %*% X)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   Agriculture   Examination     Education      Catholic\nAgriculture       4.600000e+01  6.272760e-15  4.884981e-15 -2.522288e-14\nExamination       1.002115e-13  4.600000e+01  1.140754e-14  4.335421e-14\nEducation         1.257328e-13  1.104672e-14  4.600000e+01 -1.309508e-13\nCatholic         -1.120631e-14 -2.477185e-15 -4.218847e-15  4.600000e+01\nInfant.Mortality  1.318945e-13 -3.708145e-14 -5.773160e-14  3.819167e-14\n                 Infant.Mortality\nAgriculture         -5.329071e-15\nExamination         -4.218847e-15\nEducation           -1.065814e-14\nCatholic             8.881784e-16\nInfant.Mortality     4.600000e+01\n```\n\n\n:::\n:::\n\n\n\n\n\n\n:::::\n\n:::\n\n::: {.content-visible when-profile=\"solution\"} \n::: {.callout-tip title=\"solution\"} \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npco |> \n  tidy(matrix=\"v\") |> \n  pivot_wider(id_cols =column, \n              names_from = PC, \n              values_from = value) |> \n  rowwise() |> \n  summarise(column, l2=sum((c_across(where(is.numeric)))^2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 x 2\n  column              l2\n  <chr>            <dbl>\n1 Agriculture       1.00\n2 Examination       1   \n3 Education         1   \n4 Catholic          1   \n5 Infant.Mortality  1   \n```\n\n\n:::\n:::\n\n\n\n\n\n:::\n:::\n\nChecking Orthogonality of $V$ \n\n::: {.content-visible when-profile=\"solution\"} \n::: {.callout-tip title=\"solution\"} \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# checking that pco$rotation is an orthogonal matrix \nt(pco$rotation) %*% pco$rotation\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n              PC1           PC2           PC3           PC4           PC5\nPC1  1.000000e+00 -4.340061e-16 -1.825796e-16  0.000000e+00 -2.255141e-17\nPC2 -4.340061e-16  1.000000e+00  3.384879e-16 -1.951564e-18  2.775558e-17\nPC3 -1.825796e-16  3.384879e-16  1.000000e+00  1.214306e-17 -5.551115e-17\nPC4  0.000000e+00 -1.951564e-18  1.214306e-17  1.000000e+00  4.024558e-16\nPC5 -2.255141e-17  2.775558e-17 -5.551115e-17  4.024558e-16  1.000000e+00\n```\n\n\n:::\n\n```{.r .cell-code}\npco$rotation %*% t(pco$rotation)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   Agriculture   Examination     Education      Catholic\nAgriculture       1.000000e+00 -2.190088e-17  1.040834e-17  2.671474e-16\nExamination      -2.190088e-17  1.000000e+00 -2.129373e-16 -4.011548e-18\nEducation         1.040834e-17 -2.129373e-16  1.000000e+00 -3.165870e-17\nCatholic          2.671474e-16 -4.011548e-18 -3.165870e-17  1.000000e+00\nInfant.Mortality  2.081668e-17  3.469447e-16 -1.387779e-16  2.081668e-17\n                 Infant.Mortality\nAgriculture          2.081668e-17\nExamination          3.469447e-16\nEducation           -1.387779e-16\nCatholic             2.081668e-17\nInfant.Mortality     1.000000e+00\n```\n\n\n:::\n:::\n\n\n\n\n\n:::\n:::\n\n\n## Compare standardized and non-standardized PCA\n\nPay attention to the correlation circles.\n\n1.  How well are variables represented?\n2.  Which variables contribute to the first axis?\n\n::: {.content-visible when-profile=\"solution\"} \n::: {.callout-tip title=\"solution\"} \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npco_c <- swiss %>% \n  select(-Fertility) %>% \n  prcomp()\n\npco_cs <- swiss %>% \n  select(-Fertility) %>% \n  prcomp(scale.=T, center=T)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(co_circle_ppl %+% (pco_c %>% \n  prep_co_circle())  +\n  ggtitle(\"Swiss, correlation circle\", \n          subtitle = \"centered, unscaled\"))\n```\n\n::: {.cell-output-display}\n![](lab-pca_files/figure-pdf/unnamed-chunk-37-1.pdf){fig-pos='H' width=50%}\n:::\n\n```{.r .cell-code}\n(\n  co_circle_ppl %+% (pco_cs %>% \n  prep_co_circle())  +\n  ggtitle(\"Swiss, correlation circle\", \n          subtitle = \"centered, scaled\")\n)\n```\n\n::: {.cell-output-display}\n![](lab-pca_files/figure-pdf/unnamed-chunk-37-2.pdf){fig-pos='H' width=50%}\n:::\n:::\n\n\n\n\n\n:::\n:::\n\n\nExplain the contrast between the two correlation circles.\n\nIn the sequel we focus on standardized PCA.\n\n::: {.content-visible when-profile=\"solution\"} \n::: {.callout-tip title=\"solution\"} \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nq <-  p %+% (pco_cs %>% \n  augment(swiss)) +\n  ggtitle(\"Swiss data on first two PCs\", subtitle = \"centered, scaled\")\n\n(q + \n  aes(color=Infant.Mortality)) +\n(q + \n   aes(color=Education)) +\n(q + \n   aes(color=Examination)) +\n(q + \n   aes(color=Catholic)) +\n(q + \n   aes(color=Agriculture)) +\n(q + \n   aes(color=Fertility)) +  \nplot_layout(ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: ggrepel: 47 unlabeled data points (too many overlaps). Consider increasing max.overlaps\nggrepel: 47 unlabeled data points (too many overlaps). Consider increasing max.overlaps\nggrepel: 47 unlabeled data points (too many overlaps). Consider increasing max.overlaps\nggrepel: 47 unlabeled data points (too many overlaps). Consider increasing max.overlaps\nggrepel: 47 unlabeled data points (too many overlaps). Consider increasing max.overlaps\nggrepel: 47 unlabeled data points (too many overlaps). Consider increasing max.overlaps\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](lab-pca_files/figure-pdf/unnamed-chunk-38-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n:::\n:::\n\n### Investigate eigenvalues of covariance matrix\n\nHow many axes should we keep?\n\n::: {.content-visible when-profile=\"solution\"} \n::: {.callout-tip title=\"solution\"} \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_screeplot %+% (pco_cs%>% \n  tidy(matrix=\"pcs\")) \n\n# plot(pco_cs)\n```\n:::\n\n\n\n\n\n\nElbow rule:  keep the first three PCs \n:::\n:::\n\n### Provide an interpretation of the first two principal axes\n\n1.  Which variables contribute to the two first principal axes?\n\n::: {.content-visible when-profile=\"solution\"} \n::: {.callout-tip title=\"solution\"} \n\nThis comes from the correlation circle. We rely on function `prep_co_circle` and \non the graphical pipeline `co_circle_ppl`. \n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(\n  co_circle_ppl %+% \n    prep_co_circle(pco_cs) +\n    ggtitle(\"Swiss, correlation circle\", \n            subtitle = \"centered, scaled\")\n)\n```\n\n::: {.cell-output-display}\n![](lab-pca_files/figure-pdf/unnamed-chunk-40-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n:::\n:::\n\n2.  Analyze the signs of correlations between variables and axes?\n\n::: {.content-visible when-profile=\"solution\"} \n::: {.callout-tip title=\"solution\"} \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nswiss |> \n  select(-Fertility) |> \n  corrr::correlate() |> \n  corrr::shave() |> \n  corrr::rplot(print_cor = T) +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCorrelation computed with\n* Method: 'pearson'\n* Missing treated using: 'pairwise.complete.obs'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](lab-pca_files/figure-pdf/unnamed-chunk-41-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n:::\n:::\n\n### Add the `Fertility` variable\n\nPlot again the correlation circle using the same principal axes as before,\nbut add the `Fertility` variable. How does  `Fertility` relate with covariates?\nwith principal axes?\n\n::: {.content-visible when-profile=\"solution\"} \n\n::::: {.callout-tip title=\"solution\"} \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nU <-  pco_cs %$%    # exposition pipe\n  (1/sqrt(nrow(x)-1) *x %*% diag((sdev)^(-1)))\n\nUprime <- with(pco_cs, \n  1/sqrt(nrow(x)-1) *x %*% diag((sdev)^(-1)))\n\nt(U) %*% U\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n              [,1]          [,2]         [,3]          [,4]          [,5]\n[1,]  1.000000e+00 -1.023487e-16 3.469447e-17 -1.162915e-15  2.706169e-16\n[2,] -1.023487e-16  1.000000e+00 9.367507e-17  4.781874e-16  4.805184e-16\n[3,]  3.469447e-17  9.367507e-17 1.000000e+00  4.454933e-15  3.122502e-16\n[4,] -1.162915e-15  4.781874e-16 4.454933e-15  1.000000e+00 -6.543431e-16\n[5,]  2.706169e-16  4.805184e-16 3.122502e-16 -6.543431e-16  1.000000e+00\n```\n\n\n:::\n\n```{.r .cell-code}\nt(Uprime) %*% Uprime\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n              [,1]          [,2]         [,3]          [,4]          [,5]\n[1,]  1.000000e+00 -1.023487e-16 3.469447e-17 -1.162915e-15  2.706169e-16\n[2,] -1.023487e-16  1.000000e+00 9.367507e-17  4.781874e-16  4.805184e-16\n[3,]  3.469447e-17  9.367507e-17 1.000000e+00  4.454933e-15  3.122502e-16\n[4,] -1.162915e-15  4.781874e-16 4.454933e-15  1.000000e+00 -6.543431e-16\n[5,]  2.706169e-16  4.805184e-16 3.122502e-16 -6.543431e-16  1.000000e+00\n```\n\n\n:::\n\n```{.r .cell-code}\n(norm(U,type = \"F\"))^2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n:::\n\n\n\n\n\n:::::\n\n:::\n\n### Display individuals (districts)\n\n       \n### Comment\n\n\n### Biplot \n\n::: {.callout-note title=\"Question\"}\n\n:::\n\n\n::: {.content-visible when-profile=\"solution\"} \n\n::: {.callout-tip title=\"solution\"} \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npco <- swiss %>% \n  select(-Fertility) %>% \n  prcomp(scale.=T)\n\ndf_cocirc <- pco %>% \n  tidy(matrix=\"v\") %>% \n  pivot_wider(id_cols =column, \n              names_from = PC, \n              values_from = value) \n\naugment(pco, data=swiss) %>% \n  ggplot() + \n  geom_point(aes(x=.fittedPC1, \n                 y=.fittedPC2, \n                 color=Fertility, label=.rownames)) +\n  coord_fixed() + \n  ggrepel::geom_text_repel(aes(x=.fittedPC1, \n                               y=.fittedPC2,\n                               color=Infant.Mortality,\n                               label=.rownames)) + \n  geom_segment(data=df_cocirc,  \n               mapping=aes(x= 4* `1`, \n                           y= 4 * `2`, \n                           linetype=factor(column),\n                           label=column,\n                           xend=0, \n                           yend=0), \n               arrow = grid::arrow(ends = \"first\",\n                                    unit(.1, \"inches\")\n                                  )) + \n  scale_color_viridis_c() +\n  xlim(c(-5,5)) + \n  ylim(c(-5,5)) #+\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in geom_point(aes(x = .fittedPC1, y = .fittedPC2, color = Fertility, :\nIgnoring unknown aesthetics: label\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in geom_segment(data = df_cocirc, mapping = aes(x = 4 * `1`, y = 4 * :\nIgnoring unknown aesthetics: label\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: ggrepel: 37 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](lab-pca_files/figure-pdf/unnamed-chunk-43-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\n  # ggrepel::geom_text_repel(data=df_cocirc, \n  #                          aes(x= 4* `1`,\n  #                              y= 4 * `2`, \n  #                              label=column), \n  #                          color=\"red\")\n```\n:::\n\n\n\n\n\n:::\n\n:::\n\n\n::: {.callout-note title=\"Question\"}\n\n\n:::\n\n::: {.content-visible when-profile=\"solution\"} \n\n::: {.callout-tip title=\"solution\"} \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(pco, \n         data=swiss, \n         color=\"Agriculture\", \n         loadings = TRUE, \n         loadings.colour = 'blue',\n         loadings.label = TRUE)\n```\n\n::: {.cell-output-display}\n![](lab-pca_files/figure-pdf/unnamed-chunk-44-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n:::\n\n:::\n\n \n\n::: {.content-hidden}\n\n::: {.content-visible when-profile=\"solution\"} \n::: {.callout-tip title=\"solution\"} \n\n### kmeans\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkm.2 <- swiss %>%  \n  select(-Fertility) %>% \n  scale() %>% \n  kmeans(centers = 2)\n\nmake_df_centers <- function(object) { \n  as.data.frame(object[[\"centers\"]]) %>%\n  tibble::rownames_to_column(var=\".cluster\")\n}\n\ndf_centers.2 <- make_df_centers(km.2)\n```\n:::\n\n\n\n\n\n:::\n:::\n:::\n\n::: {.content-hidden}\n::: {.content-visible when-profile=\"solution\"} \n::: {.callout-tip title=\"solution\"} \n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkm.2.pca <-  swiss %>%  \n  select(-Fertility) %>% \n  scale() %>% \n  prcomp() %>% \n  augment(data=swiss) %>% \n  select(starts_with(\".fittedPC\")) %>% \n  kmeans(centers=2)\n\ndf_centers.2.pca <- make_df_centers(km.2.pca)\n```\n:::\n\n\n\n\n\n\n:::\n:::\n:::\n\n::: {.content-hidden}\n::: {.content-visible when-profile=\"solution\"} \n::: {.callout-tip title=\"solution\"} \n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbroom::augment(km.2, scale(swiss)) %>%\n  ggplot() +\n  aes(x=Education, y=Infant.Mortality, colour=.cluster) +\n  geom_point(aes()) +\n  stat_voronoi(data = df_centers.2,\n               geom=\"path\"               ) +\n  geom_point(data = df_centers.2,\n             colour = \"black\",\n             shape=\"+\",\n             size=5) +\n  coord_fixed() +\n  labs(col=\"Voronoï cells\") +\n  ggtitle(\"Kmeans over Swiss dataset, k=3\")\n```\n:::\n\n\n\n\n\n:::\n:::\n:::\n\n::: {.content-hidden}\n::: {.content-visible when-profile=\"solution\"} \n::: {.callout-tip title=\"solution\"} \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwhiteside <-  MASS::whiteside\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwhiteside <- whiteside %>% \n  select(-Insul) %>% \n  scale() %>% \n  as_tibble() %>% \n  rename_with(.fn= ~ str_c( ., \"scaled\", sep=\"_\")) %>% \n  bind_cols(whiteside)\n\nkm.2 <- whiteside %>% \n  select(ends_with(\"scaled\")) %>% \n  kmeans(centers=2)\n\n\ndf_centers.2 <-  make_df_centers(km.2)\n```\n:::\n\n\n\n\n\n:::\n:::\n:::\n\n::: {.content-hidden}\n::: {.content-visible when-profile=\"solution\"} \n::: {.callout-tip title=\"solution\"} \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbroom::augment(km.2, whiteside) %>%\n  ggplot() +\n  aes(x=Temp_scaled, y=Gas_scaled, colour=.cluster) +\n  geom_point(aes(shape=Insul)) +\n  stat_voronoi(data = df_centers.2,\n               geom=\"path\",\n              outline=data.frame(x=c(-3, 3, 3, -3), \n                                  y=c(-3, -3, 3, 3))\n               ) +\n  geom_point(data = df_centers.2,\n             colour = \"black\",\n             shape=\"+\",\n             size=5) +\n  coord_fixed() +\n  labs(col=\"Voronoï cells\") +\n  ggtitle(\"Kmeans over whiteside dataset, k=2\")\n```\n:::\n\n\n\n\n\n:::\n:::\n:::\n\n# References \n\n\n[https://scholar.google.com/citations?user=xbCKOYMAAAAJ&hl=fr&oi=ao](https://scholar.google.com/citations?user=xbCKOYMAAAAJ&hl=fr&oi=ao)\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}