{
  "hash": "7c9604e4be11c39b07c4200f3c909d35",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 'LAB: Univariate analysis'\ndate: \"2025-03-18 15:12:20.316516\"\ndraft: false \n\nexecute:\n  echo: true\n  eval: true\n  collapse: true\n\n\nformat:\n  html:\n    output-file: lab-univariate-numeric.html\n  pdf:\n    output-file: lab-univariate-numeric.pdf\n\n\n---\n\n\n\n\n::: {layout=\"[80,20]\"}\n\n::: {#first-column}\n\n|                            |\n|:---------------------------|\n| {{< var curriculum >}}     |\n| {{< var university >}}     |\n| Année {{< var year >}}     |\n| {{< var homepage >}}       |\n| {{< var moodle >}}         |\n\n\n::: \n\n::: {#second-column}\n![](/images/UniversiteParis_monogramme_couleur_RVB.png){align=\"right\" style=\"size:50px;\" width=75}\n:::\n\n:::\n\n\n\n\n\n\n# Univariate numerical samples\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nto_be_loaded <- c(\"tidyverse\", \n                  \"magrittr\",\n                  \"skimr\",\n                  \"lobstr\"\n)\n\nfor (pck in to_be_loaded) {\n  if (!require(pck, character.only = T)) {\n    pak::pkg_install(pck) # ,,    repos=\"http://cran.rstudio.com/\")\n    stopifnot(require(pck, character.only = T))\n  }  \n}\n```\n:::\n\n\n\n\n\n\n\n\n# Objectives\n\nIn Exploratory analysis of tabular data, univariate analysis is the first step. It consists in exploring, summarizing, visualizing columns of a dataset.\n\nIn common circumstances, table wrangling is a prerequisite.   \n\nThen, univariate techniques depend on the kind of columns we are facing.\n\n\nFor *numerical* samples/columns, to name a few:\n\n- Boxplots\n- Histograms\n- Density plots\n- CDF\n- Quantile functions\n- Miscellanea\n\nFor categorical samples/columns, we have: \n\n- Bar plots\n- Column plots\n\n\n# Dataset\n\n\n> Since 1948, the US Census Bureau  carries out a monthly Current Population Survey, \ncollecting data concerning residents aged above 15  from $150 000$ households. \nThis survey is one of the most important sources of information concerning the american workforce. Data reported in file `Recensement.txt`  originate from the 2012 census. \n\nIn this lab, we investigate the numerical colums of the dataset.\n\n\nAfter downloading, dataset `Recensement` can be found in file `Recensement.csv`.\n\nChoose a loading function  for the format. `Rstudio` IDE provides a valuable helper. \n\nLoad the data into the session environment and call it `df`.\n\n\n\n\n\n\n\n\n\n::: {.content-visible when-profile=\"solution\"}\n\n::::: {.callout-note title=\"Solution\" collapse=\"true\"}\n\n\n\n\n::: {.cell mesage='false'}\n\n```{.r .cell-code}\nif (!fs::dir_exists('./DATA')) {\n    warning(glue::glue(\"Creating directory ./DATA in {getwd()}\"))\n    fs::dir_create('./DATA')\n  }\n\nif (!fs::file_exists(\"./DATA/Recensement.csv\")) {\n  warning(\"Downloading Recensement.csv from  https://stephane-v-boucheron.fr/data/Recensement.csv\")\n  download.file('https://stephane-v-boucheron.fr/data/Recensement.csv', \n                \"./DATA/Recensement.csv\")\n  warning(\"Downloaded!!\")\n}\n\ndf <- readr::read_table(\"./DATA/Recensement.csv\")\n## \n## ── Column specification ────────────────────────────────────────────────────────\n## cols(\n##   AGE = col_double(),\n##   SEXE = col_character(),\n##   REGION = col_character(),\n##   STAT_MARI = col_character(),\n##   SAL_HOR = col_double(),\n##   SYNDICAT = col_character(),\n##   CATEGORIE = col_double(),\n##   NIV_ETUDES = col_double(),\n##   NB_PERS = col_double(),\n##   NB_ENF = col_double(),\n##   REV_FOYER = col_double()\n## )\n\ndf %>% \n  glimpse()\n## Rows: 599\n## Columns: 11\n## $ AGE        <dbl> 58, 40, 29, 59, 51, 19, 64, 23, 47, 66, 26, 23, 54, 44, 56,…\n## $ SEXE       <chr> \"F\", \"M\", \"M\", \"M\", \"M\", \"M\", \"F\", \"F\", \"M\", \"F\", \"M\", \"F\",…\n## $ REGION     <chr> \"NE\", \"W\", \"S\", \"NE\", \"W\", \"NW\", \"S\", \"NE\", \"NW\", \"S\", \"NE\"…\n## $ STAT_MARI  <chr> \"C\", \"M\", \"C\", \"D\", \"M\", \"C\", \"M\", \"C\", \"M\", \"D\", \"M\", \"C\",…\n## $ SAL_HOR    <dbl> 13.25, 12.50, 14.00, 10.60, 13.00, 7.00, 19.57, 13.00, 20.1…\n## $ SYNDICAT   <chr> \"non\", \"non\", \"non\", \"oui\", \"non\", \"non\", \"non\", \"non\", \"ou…\n## $ CATEGORIE  <dbl> 5, 7, 5, 3, 3, 3, 9, 1, 8, 5, 2, 5, 3, 2, 2, 2, 5, 9, 2, 2,…\n## $ NIV_ETUDES <dbl> 43, 38, 42, 39, 35, 39, 40, 43, 40, 40, 42, 40, 34, 40, 43,…\n## $ NB_PERS    <dbl> 2, 2, 2, 4, 8, 6, 3, 2, 3, 1, 3, 2, 6, 5, 4, 4, 3, 2, 3, 2,…\n## $ NB_ENF     <dbl> 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,…\n## $ REV_FOYER  <dbl> 11, 7, 15, 7, 15, 16, 13, 11, 12, 8, 10, 8, 13, 11, 14, 7, …\n```\n:::\n\n\n\n\n:::::\n\n:::\n\n# Table wrangling\n\n::: {.callout-note title=\"Question\"}\n\nWhich columns should be considered as categorical/factor?\n\n:::\n\n::: {.content-visible when-profile=\"solution\" collapse=\"true\"}\n\nDeciding which variables are categorical sometimes requires judgement. \n\nLet us attempt to base the decision on a checkable criterion: determine  the number of distinct values in each column, consider those columns with less than 20 distinct values as factors. \n\n:::\n\n::: {.content-visible when-profile=\"solution\"}\n\n::::: {.callout-note title=\"solution\" collapse=\"true\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nto_be_categorized  <- df %>% \n  summarise(across(everything(), n_distinct)) %>% \n  pivot_longer(cols = everything(), \n               # names_to = \"nom_colonne\",\n               values_to = c(\"n_levels\")) %>% \n  filter(n_levels < 20) %>% \n  arrange(n_levels) \n\nto_be_categorized\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9 × 2\n  name       n_levels\n  <chr>         <int>\n1 SEXE              2\n2 SYNDICAT          2\n3 REGION            4\n4 STAT_MARI         5\n5 NB_ENF            7\n6 NB_PERS           9\n7 CATEGORIE        10\n8 NIV_ETUDES       15\n9 REV_FOYER        16\n```\n\n\n:::\n\n```{.r .cell-code}\nto_be_categorized %>% \n  pull(name)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"SEXE\"       \"SYNDICAT\"   \"REGION\"     \"STAT_MARI\"  \"NB_ENF\"    \n[6] \"NB_PERS\"    \"CATEGORIE\"  \"NIV_ETUDES\" \"REV_FOYER\" \n```\n\n\n:::\n:::\n\n\n\n\nColumns `NB_PERS` and `NB_ENF` have few unique values and nevertheless we could consider them as quantitative. \n\n:::::\n\n:::\n\nCoerce the relevant columns as factors. \n\n\n\n::: {.content-visible when-profile=\"solution\"}\n\n::::: {.callout-note title=\"solution\" collapse=\"true\"}\n\nWe could proceed by iteration over the relevant columns. We \nuse `lobstr::...` to monitor the copy on modify process. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlobstr::obj_addr(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"0x6479cbf734a8\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlobstr::ref(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n█ [1:0x6479cbf734a8] <spc_tbl_[,11]> \n├─AGE = [2:0x6479cc0a2060] <dbl> \n├─SEXE = [3:0x6479cc0a3fe0] <chr> \n├─REGION = [4:0x6479cc0a5f60] <chr> \n├─STAT_MARI = [5:0x6479cc0a7ee0] <chr> \n├─SAL_HOR = [6:0x6479cc137090] <dbl> \n├─SYNDICAT = [7:0x6479cc139010] <chr> \n├─CATEGORIE = [8:0x6479cc13af90] <dbl> \n├─NIV_ETUDES = [9:0x6479cc13cf10] <dbl> \n├─NB_PERS = [10:0x6479cc13ee90] <dbl> \n├─NB_ENF = [11:0x6479cbbf8c60] <dbl> \n└─REV_FOYER = [12:0x6479cbbfabe0] <dbl> \n```\n\n\n:::\n\n```{.r .cell-code}\ndf_copy <- df \n\nlobstr::ref(df_copy)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n█ [1:0x6479cbf734a8] <spc_tbl_[,11]> \n├─AGE = [2:0x6479cc0a2060] <dbl> \n├─SEXE = [3:0x6479cc0a3fe0] <chr> \n├─REGION = [4:0x6479cc0a5f60] <chr> \n├─STAT_MARI = [5:0x6479cc0a7ee0] <chr> \n├─SAL_HOR = [6:0x6479cc137090] <dbl> \n├─SYNDICAT = [7:0x6479cc139010] <chr> \n├─CATEGORIE = [8:0x6479cc13af90] <dbl> \n├─NIV_ETUDES = [9:0x6479cc13cf10] <dbl> \n├─NB_PERS = [10:0x6479cc13ee90] <dbl> \n├─NB_ENF = [11:0x6479cbbf8c60] <dbl> \n└─REV_FOYER = [12:0x6479cbbfabe0] <dbl> \n```\n\n\n:::\n\n```{.r .cell-code}\nfor (cl in pull(to_be_categorized,name)) {\n  df_copy[[cl]] <- as_factor(df_copy[[cl]])\n}\n\nlobstr::obj_addr(df_copy)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"0x6479ccbfe318\"\n```\n\n\n:::\n\n```{.r .cell-code}\nfoo <- lobstr::ref(df_copy)\n```\n:::\n\n\n\n\n:::\n\n::::: {.callout-note title=\"solution (cont'd)\" collapse=\"true\"}\n \nWe will kill several birds with one stone.\n\n`across()` allows us to  pick  the columns to be categorized, to \napply `as_factor()` to each of them, and to replace the old column \nby the result of `as_factor(....)`  \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_cp <- df %>% \n  mutate(across(all_of(pull(to_be_categorized, name)), as_factor))\n\nlobstr::ref(df_cp)\n## █ [1:0x6479cc122ed8] <tibble[,11]> \n## ├─AGE = [2:0x6479cc0a2060] <dbl> \n## ├─SEXE = [3:0x6479c9870b18] <fct> \n## ├─REGION = [4:0x6479c9898098] <fct> \n## ├─STAT_MARI = [5:0x6479c98a7d98] <fct> \n## ├─SAL_HOR = [6:0x6479cc137090] <dbl> \n## ├─SYNDICAT = [7:0x6479c9884760] <fct> \n## ├─CATEGORIE = [8:0x6479cbfb4a70] <fct> \n## ├─NIV_ETUDES = [9:0x6479ccb4b8f0] <fct> \n## ├─NB_PERS = [10:0x6479ccb3e390] <fct> \n## ├─NB_ENF = [11:0x6479cc72fef0] <fct> \n## └─REV_FOYER = [12:0x6479ca390f30] <fct>\n\ndf %>% \n  glimpse()  \n## Rows: 599\n## Columns: 11\n## $ AGE        <dbl> 58, 40, 29, 59, 51, 19, 64, 23, 47, 66, 26, 23, 54, 44, 56,…\n## $ SEXE       <chr> \"F\", \"M\", \"M\", \"M\", \"M\", \"M\", \"F\", \"F\", \"M\", \"F\", \"M\", \"F\",…\n## $ REGION     <chr> \"NE\", \"W\", \"S\", \"NE\", \"W\", \"NW\", \"S\", \"NE\", \"NW\", \"S\", \"NE\"…\n## $ STAT_MARI  <chr> \"C\", \"M\", \"C\", \"D\", \"M\", \"C\", \"M\", \"C\", \"M\", \"D\", \"M\", \"C\",…\n## $ SAL_HOR    <dbl> 13.25, 12.50, 14.00, 10.60, 13.00, 7.00, 19.57, 13.00, 20.1…\n## $ SYNDICAT   <chr> \"non\", \"non\", \"non\", \"oui\", \"non\", \"non\", \"non\", \"non\", \"ou…\n## $ CATEGORIE  <dbl> 5, 7, 5, 3, 3, 3, 9, 1, 8, 5, 2, 5, 3, 2, 2, 2, 5, 9, 2, 2,…\n## $ NIV_ETUDES <dbl> 43, 38, 42, 39, 35, 39, 40, 43, 40, 40, 42, 40, 34, 40, 43,…\n## $ NB_PERS    <dbl> 2, 2, 2, 4, 8, 6, 3, 2, 3, 1, 3, 2, 6, 5, 4, 4, 3, 2, 3, 2,…\n## $ NB_ENF     <dbl> 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,…\n## $ REV_FOYER  <dbl> 11, 7, 15, 7, 15, 16, 13, 11, 12, 8, 10, 8, 13, 11, 14, 7, …\n```\n:::\n\n\n\n\nWe could do this using the WET approach \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_wet <- df %>% \n  mutate(SEXE = as_factor(SEXE), \n         SYNDICAT = as_factor(SYNDICAT), \n         REGION = as_factor(REGION), \n         STAT_MARI = as_factor(STAT_MARI), \n         NB_ENF = as_factor(NB_ENF), \n         NB_PERS = as_factor(NB_PERS), \n         CATEGORIE = as_factor(CATEGORIE),\n         NIV_ETUDES = as_factor(NIV_ETUDES), \n         REV_FOYER = as_factor(REV_FOYER)\n  ) \n\ndf_wet %>% \n  glimpse()\n```\n:::\n\n\n\n\n\n{{< fa hand-point-right >}} Compare `pull`  and `pluck`\n\n:::::\n\n:::\n\n\n# Search for missing data  (optional)\n\n::: {.callout-note title=\"Question\"}\n\nCheck whether some columns contain missing data (use `is.na`).\n\n:::\n\n::: {.callout-tip}\n\nUseful functions:\n\n- `dplyr::summarise_all`\n- `tidyr::pivot_longer`\n- `dplyr::arrange`\n\n:::\n\n::: {.content-visible when-profile=\"solution\"}\n\n::::: {.callout-note title=\"solution\" collapse=\"true\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  is.na() %>% \n  as_tibble %>% \n  summarise(across(everything(), sum))  %>%\n  knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n| AGE| SEXE| REGION| STAT_MARI| SAL_HOR| SYNDICAT| CATEGORIE| NIV_ETUDES| NB_PERS| NB_ENF| REV_FOYER|\n|---:|----:|------:|---------:|-------:|--------:|---------:|----------:|-------:|------:|---------:|\n|   0|    0|      0|         0|       0|        0|         0|          0|       0|      0|         0|\n\n\n:::\n:::\n\n\n\n\nor \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  summarise(across(everything(), \\(x) sum(is.na(x)))) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 11\n    AGE  SEXE REGION STAT_MARI SAL_HOR SYNDICAT CATEGORIE NIV_ETUDES NB_PERS\n  <int> <int>  <int>     <int>   <int>    <int>     <int>      <int>   <int>\n1     0     0      0         0       0        0         0          0       0\n# ℹ 2 more variables: NB_ENF <int>, REV_FOYER <int>\n```\n\n\n:::\n:::\n\n\n\n\nor \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  summarise(across(everything(), ~ sum(is.na(.)))) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 11\n    AGE  SEXE REGION STAT_MARI SAL_HOR SYNDICAT CATEGORIE NIV_ETUDES NB_PERS\n  <int> <int>  <int>     <int>   <int>    <int>     <int>      <int>   <int>\n1     0     0      0         0       0        0         0          0       0\n# ℹ 2 more variables: NB_ENF <int>, REV_FOYER <int>\n```\n\n\n:::\n:::\n\n\n\n\nNote the different ways of introduction anonymous functions.\n\n:::::\n\n:::\n\n\n# Analysis of column `AGE`\n\n## Numerical summary \n\n\n\n::: {.content-visible when-profile=\"solution\"}\n\n::::: {.callout-note title=\"solution\" collapse=\"false\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n    pull(AGE) %>% \n    summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  16.00   29.00   42.00   41.85   53.50   80.00 \n```\n\n\n:::\n\n```{.r .cell-code}\nsd(df$AGE) ; IQR(df$AGE) ; mad(df$AGE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 14.11648\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 24.5\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 17.7912\n```\n\n\n:::\n:::\n\n\n\n\n:::::\n\n:::\n\nUse `skimr::skim()` \n\n\n::: {.content-visible when-profile=\"solution\"}\n\n::::: {.callout-note title=\"solution\" collapse=\"true\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n    pull(AGE) %>% \n    skimr::skim()\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |           |\n|:------------------------|:----------|\n|Name                     |Piped data |\n|Number of rows           |599        |\n|Number of columns        |1          |\n|_______________________  |           |\n|Column type frequency:   |           |\n|numeric                  |1          |\n|________________________ |           |\n|Group variables          |None       |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|  mean|    sd| p0| p25| p50|  p75| p100|hist  |\n|:-------------|---------:|-------------:|-----:|-----:|--:|---:|---:|----:|----:|:-----|\n|data          |         0|             1| 41.85| 14.12| 16|  29|  42| 53.5|   80|▆▇▇▆▁ |\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nskm <- df %>% \n  skimr::skim(AGE)\n\nclass(skm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"skim_df\"    \"tbl_df\"     \"tbl\"        \"data.frame\"\n```\n\n\n:::\n\n```{.r .cell-code}\nattributes(skm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$class\n[1] \"skim_df\"    \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n$row.names\n[1] 1\n\n$names\n [1] \"skim_type\"     \"skim_variable\" \"n_missing\"     \"complete_rate\"\n [5] \"numeric.mean\"  \"numeric.sd\"    \"numeric.p0\"    \"numeric.p25\"  \n [9] \"numeric.p50\"   \"numeric.p75\"   \"numeric.p100\"  \"numeric.hist\" \n\n$data_rows\n[1] 599\n\n$data_cols\n[1] 11\n\n$df_name\n[1] \"`.`\"\n\n$dt_key\n[1] NA\n\n$groups\ncharacter(0)\n\n$base_skimmers\n[1] \"n_missing\"     \"complete_rate\"\n\n$skimmers_used\n$skimmers_used$numeric\n[1] \"mean\" \"sd\"   \"p0\"   \"p25\"  \"p50\"  \"p75\"  \"p100\" \"hist\"\n```\n\n\n:::\n\n```{.r .cell-code}\ntibble::as_tibble(skm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 12\n  skim_type skim_variable n_missing complete_rate numeric.mean numeric.sd\n  <chr>     <chr>             <int>         <dbl>        <dbl>      <dbl>\n1 numeric   AGE                   0             1         41.8       14.1\n# ℹ 6 more variables: numeric.p0 <dbl>, numeric.p25 <dbl>, numeric.p50 <dbl>,\n#   numeric.p75 <dbl>, numeric.p100 <dbl>, numeric.hist <chr>\n```\n\n\n:::\n:::\n\n\n\n\n\n:::::\n\n:::\n\n::: {.callout-note title=\"Question\"}\n\nCompare `mean` and `median`, `sd`  and `IQR`. \n\nAre mean and median systematically related?\n\n:::\n\n\n::: {.content-visible when-profile=\"solution\" collapse=\"true\"}\n\n::::: {.callout-note title=\"solution\" collapse=\"true\"}\n\nAsk chatgpt.\n\nThere is at least one relation between median and mean for square-integrable distributoins:\n$$|\\text{Median} - \\text{Mean}| \\leq \\text{sd}$$\nLévy's inequality.\n\n:::::\n\n:::\n\n::: {.callout-note title=\"Question\"}\n\nAre standard deviation and IQR systematically related ?\n\n:::\n\n::: {.content-visible when-profile=\"solution\" collapse=\"true\"}\n\n::::: {.callout-note title=\"solution\" collapse=\"true\"}\n\nAsk chatgpt.\n\nYes. \n\n:::::\n\n:::\n\n## Boxplots\n\n::: {.callout-note title=\"Question\"}\n\nDraw a boxplot of the Age distribution \n\n:::\n\n::: {.content-visible when-profile=\"solution\"}\n\n::::: {.callout-note title=\"solution\" collapse=\"true\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> \n    ggplot() +\n    aes(x=1L, y=AGE) +\n    geom_boxplot() +\n    labs(\n        title=\"Age distribution\",\n        subtitle = \"Census data\"\n    )\n```\n\n::: {.cell-output-display}\n![](lab-univariate-numeric_files/figure-html/boxplot-age-1.png){width=672}\n:::\n:::\n\n\n\n\n:::::\n\n:::\n\n::: {.callout-note title=\"Question\"}\n\nHow would you get rid of the useless ticks on the x-axis? \n\n:::\n\n::: {.content-visible when-profile=\"solution\" collapse=\"true\"}\n\n::::: {.callout-note title=\"solution\" collapse=\"true\"}\n\nAsk chatgpt.\n\nYes. \n\n:::::\n\n:::\n\n## Histograms\n\n::: {.callout-note title=\"Question\"}\n\nPlot a _histogram_ of the empirical distribution of the `AGE` column\n\n:::\n\n::: {.content-visible when-profile=\"solution\"}\n\n::::: {.callout-note title=\"solution\" collapse=\"true\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- df |> \n  ggplot() +\n  aes(x=AGE) +\n  labs(\n    title = \"Age distribution\",\n    subtitle = \"Census data\",\n    x = \"Age (Years)\",\n    y = \"Density\"\n  ) +\n  theme_minimal()\n\np +\n  geom_histogram(aes(y=after_stat(density)),\n                 bins=15,\n                 fill=\"white\",\n                 color=\"black\") +\n  labs(\n    caption = \"Histogram\"\n  )\n```\n\n::: {.cell-output-display}\n![](lab-univariate-numeric_files/figure-html/histogram-age-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n:::::\n\n:::\n\n\n::: {.callout-note title=\"Question\"}\n\nTry different values for the `bins` parameter of `geom_histogram()`\n\n:::\n\n## Density estimates\n\n::: {.callout-note title=\"Question\"}\n\nPlot a _density_ estimate of the `AGE` column (use `stat_density`.\n\n:::\n\n::: {.content-visible when-profile=\"solution\"}\n\n::::: {.callout-note title=\"solution\" collapse=\"true\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np +\n  stat_density(\n              fill=\"white\",\n              color=\"black\") +\n  labs(\n    caption = \"Kernel Density Estimate\"\n  )\n```\n\n::: {.cell-output-display}\n![](lab-univariate-numeric_files/figure-html/age-density-1.png){width=672}\n:::\n:::\n\n\n\n\n:::::\n\n:::\n\n::: {.callout-note title=\"Question\"}\n\nPlay with parameters `bw`, `kernel` and `adjust`.\n\n:::\n\n\n::: {.callout-note title=\"Question\"}\n\nOverlay the two plots  (histogram and density).\n\n:::\n\n::: {.content-visible when-profile=\"solution\"}\n\n::::: {.callout-note title=\"solution\" collapse=\"true\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np +\n  stat_density(\n              fill=\"white\",\n              color=\"black\") +\n  geom_histogram(aes(y=after_stat(density)),\n                 bins=15,\n                 fill=\"white\",\n                 color=\"black\",\n                 alpha=.5) +\n  labs(\n    caption = \"Overlayed Density Estimates\"\n  )\n```\n\n::: {.cell-output-display}\n![](lab-univariate-numeric_files/figure-html/age-density-histogram-1.png){width=672}\n:::\n:::\n\n\n\n\n:::::\n\n:::\n\n\n## ECDF \n\n::: {.callout-note title=\"Question\"}\n\nPlot the Empirical CDF of the AGE distribution \n\n:::\n\n\n::: {.content-visible when-profile=\"solution\"}\n\n::::: {.callout-note title=\"solution\" collapse=\"true\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np +\n    stat_ecdf()  +\n    labs(\n        caption = \"Empirical CDF\"\n  )\n```\n\n::: {.cell-output-display}\n![](lab-univariate-numeric_files/figure-html/age-ecdf-1.png){width=672}\n:::\n:::\n\n\n\n\n:::::\n\n:::\n\n::: {.callout-note title=\"Question\"}\n\nCan you read the quartiles from the ECDF pplot?\n\n:::\n\n::: {.content-visible when-profile=\"solution\" collapse=\"true\"}\n\n::::: {.callout-note title=\"solution\" collapse=\"true\"}\n\nOf course. Yes, we can.\n\n:::::\n\n:::\n\n## Quantile function \n\n::: {.callout-note title=\"Question\"}\n\nPlot the quantile function of the AGE distribution. \n\n:::\n\n# Repeat the analysis for `SAL_HOR`\n\n::: {.content-visible when-profile=\"solution\"}\n\n::::: {.callout-note title=\"solution\" collapse=\"true\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- df %>% \n  ggplot() +\n  aes(x=SAL_HOR) +\n  labs(\n    title = \"Wage distribution\",\n    subtitle = \"Census data\",\n    x = \"Hourly wage\",\n    y = \"Density\"\n  ) +\n  theme_minimal()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np +\n  geom_histogram(aes(y=after_stat(density)),\n                 bins=15,\n                 fill=\"white\",\n                 color=\"black\") +\n  labs(\n    caption = \"Histogram\"\n  )\n```\n\n::: {.cell-output-display}\n![](lab-univariate-numeric_files/figure-html/sal-hor-histo-1.png){width=672}\n:::\n:::\n\n\n\n\n:::::\n\n:::\n\n\n::: {.content-visible when-profile=\"solution\"}\n\n::::: {.callout-note title=\"solution\" collapse=\"true\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np +\n  stat_density(\n              fill=\"white\",\n              color=\"black\") +\n  geom_histogram(aes(y=after_stat(density)),\n                 bins=15,\n                 fill=\"white\",\n                 color=\"black\",\n                 alpha=.5) +\n  labs(\n    caption = \"Overlayed Density Estimates\"\n  )\n```\n\n::: {.cell-output-display}\n![](lab-univariate-numeric_files/figure-html/sal-hor-density-histo-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntruc <- rlang::expr({fill=alpha(\"white\",.5)})\n\np <- df |> \n  ggplot() +\n  aes(x=SAL_HOR, y=after_stat(density)) +\n  labs(\n    title = \"Wage distribution\",\n    subtitle = \"Census data\",\n    x = \"Hourly wage\",\n    y = \"Density\"\n  ) +\n  theme_minimal()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np + \n  stat_density(fill=alpha(\"grey\", 0.5), color=\"black\") +\n  geom_histogram(fill=alpha(\"grey\", 0.5), color=\"black\", bins=15) +\n  labs(\n    caption = \"Overlayed Density Estimates\"\n  )\n```\n\n::: {.cell-output-display}\n![](lab-univariate-numeric_files/figure-html/overlayed-densities-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n:::::\n\n:::\n\n::: {.callout-note title=\"Question\"}\n\nHow could you comply with the DRY principle ?\n\n:::\n\n::: {.content-visible when-profile=\"solution\" collapse=\"true\"}\n\n::::: {.callout-note title=\"solution\" collapse=\"true\"}\n\nThis amounts to [programming with `ggplot2`](https://ggplot2-book.org/programming) function. This is not straightforward since `ggplot2` relies on data masking. \n\n> A major requirement of a good data analysis is flexibility. If your data changes, or you discover something that makes you rethink your basic assumptions, you need to be able to easily change many plots at once. The main inhibitor of flexibility is code duplication. If you have the same plotting statement repeated over and over again, you’ll have to make the same change in many different places. Often just the thought of making all those changes is exhausting! This chapter will help you overcome that problem by showing you how to program with ggplot2.\n\n> To make your code more flexible, you need to reduce duplicated code by writing functions. When you notice you’re doing the same thing over and over again, think about how you might generalise it and turn it into a function. If you’re not that familiar with how functions work in R, you might want to brush up your knowledge at https://adv-r.hadley.nz/functions.html. \n\nFrom [Hadley Wickham](https://ggplot2-book.org/programming)\n\n:::\n\n\n\n::::: {.callout-note title=\"solution\" collapse=\"true\"}\n\nAn attempt: \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngetwd()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"/home/boucheron/Documents/MA7BY020/core/labs\"\n```\n\n\n:::\n\n```{.r .cell-code}\nfs::dir_exists('UTILS')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nUTILS \n TRUE \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npct_format <- scales::percent_format(accuracy = .1)\n\nmake_biotifoul <-  function(df, .f=is.factor, .bins=30){\n\n  .scales <- \"free\"\n\n  if (identical(.f, is.factor)) {\n    .scales <- \"free_x\"\n  } \n\n  p <- df %>%\n    select(where(.f)) %>%\n    pivot_longer(\n      cols = everything(),\n      names_to = \"var\",\n      values_to = \"val\"\n    ) %>%\n    ggplot() +\n    aes(x = val) +\n    facet_wrap(~var, scales=.scales) + \n    xlab(\"\")\n  \n  if(identical(.f, is.factor)){\n    p + \n    geom_bar(fill=alpha(\"black\",.9)) + \n    geom_text(\n      aes(\n        label = sprintf(\n          \"%d\",\n          after_stat(count))\n      ),\n      stat = \"count\",\n      nudge_y = 2,\n    )\n  } else {\n    p + \n    geom_histogram(aes(y=after_stat(density)), bins=.bins) + \n    xlab(\"\")\n  }\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmp <- df_cp |> \n  make_biotifoul(is.numeric) + \n  theme_minimal()\n\nmp\n```\n\n::: {.cell-output-display}\n![](lab-univariate-numeric_files/figure-html/use-make-biotiful-1.png){width=672}\n:::\n:::\n\n\n\n\n:::::\n\n\n::::: {.callout-note title=\"solution\" collapse=\"true\"}\n\nAnother attempt\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n##| file: \"UTILS/my_histo.R\"\n#| echo: true\n#| eval: true\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlist_plots <- df_cp |> \n  select(where(is.numeric)) |> \n  colnames() |> \n  map(rlang::parse_expr) |>\n  map (\\(x) my_histo(df, {{x}}))\n\npatchwork::wrap_plots(list_plots)\n```\n:::\n\n\n\n\n\n\n:::::\n\n:::\n\n\n# {{< fa book >}} Useful links\n\n- [veridical data science](https://vdsbook.com)\n- [quarto](https://quarto.org)\n- [rmarkdown](bookdown.org/yihui/rmarkdown)\n- [dplyr](https://gplot2.tidyverse.org)\n- [ggplot2](https://ggplot2.tidyverse.org)\n- *R Graphic Cookbook*. Winston Chang. O' Reilly.\n- [A blog on ggplot object](https://www.data-imaginist.com/2017/Beneath-the-canvas/)\n- [`skimr`]()\n ",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}