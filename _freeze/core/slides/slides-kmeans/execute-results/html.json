{
  "hash": "b31968d4e968628c7e3c129dbe9ed3c1",
  "result": {
    "engine": "knitr",
    "markdown": "--- \ntitle: \"Clustering and k-means\"\ncategories: [k means, clustering, Lloyd]\ndate: \"2025-04-02 (updated: 2025-04-01)\"\n\nexecute:\n  echo: false\n  eval: true\n\nformat: \n  revealjs:\n    header: \"Clustering and k-means\"\n\nengine: knitr\n--- \n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n\n# Clustering problems  {background-color=\"#1c191c\"}\n\n\n\n## In words\n\n\nClustering consists in _partitioning_  points collections\nfrom some metric space\n\nin such a way that\n\n- points within the same group are close enough\n\nwhile\n\n- points from different groups are distant\n\n\n::: {.notes}\n\nIn the background: some notion of distance/similarity\n\n\n:::\n\n## Clustering in ML applications\n\nClustering shows up in many Machine Learning applications, for example:\n\n-   {{< fa ad >}} __Marketing__: finding groups of customers with similar\n    behavior given a large database of customer data containing their\n    properties and past buying records\n\n-   {{< fa hippo >}} __Biology__: classification of plants and animals given their\n    features\n\n-   {{< fa book >}} __Bookshops__: book ordering (recommendation)\n\n-   {{< fa car-crash >}} __Insurance__: identifying groups of motor insurance policy\n    holders with a high average claim cost; identifying frauds\n\n-  {{< fa city >}} __City-planning__: identifying groups of houses according to\n    their type, value and geographical location\n\n-   {{< fa network-wired >}} __Internet__: document classification; clustering weblog data\n    to discover groups of similar access patterns; topic modeling\n\n::: {.notes}\n\nMany distinct goals: clustering is often just one step in a data analysis pipeline\n\nFor recommendation systems, marketing, objects that fit into the same group call for the same action\n\nSome clustering should be hierarchical (toxonomy in life sciences) others can just be flat\n\n::: \n\n##\n\nA clustering application relies on  the elaboration of\na _metric/dissimilarity_ over some input space\n\nThis tasks is entangled  with _feature engineering_\n\nFocus on one specific context: _market segmentation_  {{< fa chart-pie >}}\n\n-   {{< fa database >}} __Data__: Base of customer data containing their properties\n    and past buying records\n\n-   {{< fa bullseye >}} __Goal__: Use the customers *similarities* to find groups\n\n-   __Possible directions:__\n\n    + Dimension reduction (PCA, CA, MCA, ...)\n\n    + __Clustering__ $\\approx$ _non-supervised classification_\n\n::: {.notes}\n\nAre the directions complementary? or not?\n\nClustering may be done before dimension reduction or the other way\n\n:::\n \n\n## {{< fa binoculars >}} Dimension reduction\n\nDimension reduction technologies start form:\n\n-   Training data\n    $\\mathcal{D}=\\{\\vec{X}_1,\\ldots,\\vec{X}_n\\} \\in \\mathcal{X}^n$ (i.i.d.\n    $\\sim \\Pr$)\n\n-   Space $\\mathcal{X}$ of possibly high dimension.\n\nand elaborate a  _Dimension Reduction Map_\n\nDimension reduction technologies construct a map $\\Phi$ from the space $\\mathcal{X}$\ninto a space $\\mathcal{X}'$ of __smaller dimension__\n\n \n\n##  {{< fa binoculars >}} Clustering techniques\n\nClustering techniques start from  _training data_:\n\n$$\\mathcal{D}=\\{\\vec{X}_1,\\ldots,\\vec{X}_n\\} \\in \\mathcal{X}^n$$\n\nassuming $\\vec{X}_i \\sim_{\\text{i.i.d.}} \\Pr$,  and partition the data into (latent?) groups,\n\nClustering techniques construct a map $f$ from $\\mathcal{D}$ to $\\{1,\\ldots,K\\}$ where $K$\nis a number of classes to be fixed: $f: \\quad \\vec{X}_i \\mapsto k_i$\n\n \n\n## Dimension reduction and clustering may be combined\n\nFor example, it is\ncommonplace to first perform PCA, project the data on the leading principal components\nand then perform $k$-means clustering on the projected data\n\nClustering tasks may be motivated along different directions:\n\n-   The search for an interpretation of groups\n\n-   Use of groups in further processing (prediction, ...)\n\n\n::: {.notes}\n\nThis is especially true as many clustering approaches suffer from the curse of dimensionality\n\n::: \n\n## Good clustering\n\nWe need to define the __quality of a cluster__  {{< fa medal >}}\n\nUnfortunately, no obvious quality measure exists! {{< fa frown >}}\n\nClustering quality may be assessed by scrutinizing\n\n-   _Inner homogeneity_: samples in the same group should be similar\n\n-   _Outer inhomogeneity_: samples in two different groups should be\n    different.\n\n \n\n## Shades of similarity\n\nThere are many possible definitions of _similar_ and _different_\n\nOften, they are  based on the distance between the samples\n\nExamples based on the (squared) Euclidean distance:\n\n-   Inner homogeneity $\\approx$ intra class variance/inertia,\n\n-   Outer inhomogeneity $\\approx$ inter class variance/inertia.\n\nRemember that, in flat clustering,\nthe choice of the number $K$ of clusters is often delicate\n\n \n\n\n# Kleinberg's theorem  {background-color=\"#1c191c\"}\n\n\n \n\n##  {{< fa exclamation-triangle >}}\n\n- Clustering is not a single method\n\n- Clustering methods address a large range of   problems.\n\n::: {.notes}\n\nTurning this informal statement into a formal definition proves challenging.\n\n::: \n\n## Definition Clustering function\n\nDefine a _clustering function_ $F$ as a function that\n\n- takes as input any finite domain $\\mathcal{X}$ with a dissimilarity function $d$ over its pairs\n\nand\n\n- returns a partition of $\\mathcal{X}$\n\n\n \n\n## Desirable properties\n\nA clustering function should ideally satisfy the next three properties\n\n1. _Scale Invariance_. For any domain set $\\mathcal{X}$, dissimilarity function $d$, and any\n$\\alpha>0$, the following should hold: $F(\\mathcal{X},d) = F(\\mathcal{X},\\alpha d)$.\n\n2. _Richness_ For any finite $\\mathcal{X}$ and every partition $C = (C_1,\\ldots,C_k)$ of $\\mathcal{X}$ (into\nnonempty subsets) there exists some dissimilarity function $d$ over $\\mathcal{X}$ such that\n$F(\\mathcal{X},d)=C$.\n\n3.  _Consistency_ If $d$ and $d'$ are dissimilarity functions over $\\mathcal{X}$, such that\nfor all $x, y \\in \\mathcal{X}$,\n    +  if $x,y$ belong to the same cluster in $F(\\mathcal{X},d)$ then $d'(x,y) \\leq d(x,y)$,\n    + if $x,y$ belong to different clusters in $F(\\mathcal{X},d)$ then $d'(x,y) \\geq d(x,y)$,\n\nthen $F(\\mathcal{X},d) = F(\\mathcal{X},d')$.\n\n \n\n{{< fa smile >}} Designing clustering functions meeting simultaneously _any two_ of the _three_ properties is doable\n\nbut\n\n{{< fa frown >}}  The three reasonable goals are _conflicting_\n\n## Kleinberg's impossibility theorem\n\n::: {.callout-important title=\"Theorem\"}\n\n\n**No** clustering function $F$ satisfies simultaneously all  three properties:\n\n- _Scale Invariance_,\n\n- _Richness_, and\n\n- _Consistency_\n\n:::\n\n\n\n\n# Flavors of clustering  {background-color=\"#1c191c\"}\n\n\n \n\n## Flat/Hierarchical and ...\n\nA wide variety of clustering methods have been used in Statistics and Machine Learning.\n\n- __Flat clustering (for example $k$-means)__ partitions  sample into a fixed\nnumber of classes (usually denoted by $k$). The partition is determined by\nsome algorithm\n\n.f6[The ultimate objective is to optimize some cost function.\nWhether the objective is achieved or even approximately achieved using\na reasonable amount of computational resources is not settled]\n\n- __Model based clustering__ is based on a generative model: data are assumed\nto be sampled from a specific model (usually finite mixtures of Gaussians, the model may or may not be parametric)\n\n.f6[Clustering consists in fitting such a mixture model and then assigning sample points to mixture components]\n\n- _Hierarchical clustering_ is the topic of next lesson\n\n \n\n## Carte du tendre\n\n\n::: {.columns}\n\n::: {.column width=\"30%\"}\n\n  In Machine Learning, $k$-means and hierarchical clustering   belong to a range of tasks called _non-supervised learning_\n\nThis contrasts with regression which belongs to the realm of _supervised learning_\n\n:::\n::: {.column}\n\n\n\n![](https://themlbook.com/wiki/lib/exe/fetch.php?cache=&media=ml_map.png)\n\n:::\n::: \n\n\n \n\n\n# _k_-means  {background-color=\"#1c191c\"}\n\n\n \n##\n\nThe $k$-means algorithm is an iterative method that constructs a sequence\nof Voronoï partitions\n\nA Voronoï diagram draws the nearest neighbor regions around a set of points.\n\n## Definition: Voronoï partitions\n\nAssume:\n\n- sample $X_1, \\ldots, X_n$ from $\\mathbb{R}^p$\n- $\\mathbb{R}^p$ is endowed with a metric $d$, usually $\\ell_2$, sometimes\na weighted $\\ell_2$ distance or $\\ell_1$\n\nEach cluster is defined by a _centroid_\n\nThe collection of centroids is (sometimes)  called the _codebook_ $\\mathcal{C}=c_1, \\ldots, c_k$\n\nEach centroid $c_j$ defines a class:\n\n$$C_j = \\bigg\\{ X_i : d(X_i, c_j) = \\min_{j' \\leq k} d(X_i, c_{j'})\\bigg\\}$$\n\nand more generally a _Voronoï cell_ in $\\mathbb{R}^p$\n\n$$C_j = \\bigg\\{ x :  x \\in \\mathbb{R}^p, d(x, c_j) = \\min_{j' \\leq k} d(x, c_{j'})\\bigg\\}$$\n\n\n \n\n## A Voronoï tesselation\n\n\n::: {.columns}\n::: {.column width=\"70%\"}\n\n<!-- end columns -->\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides-kmeans_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n:::\n::: {.column}\n\n#### Euclidean distance, dimension 2\n\nA voronoi tesselation generated by $100$\npoints picked at random on the gred $\\{1,\\ldots, 200\\}^2$\n\nNote that cell boundaries are line segments\n\nNote that centroids may lie close to boundaries\n\nThe position of the centroid of a Voronoi cell depends on the positions\nof the centroids of the neighboring cells\n\n:::\n::: \n\n\n\n\n\n::: {.notes}\n\nSee [`ggforce`](https://ggforce.data-imaginist.com/reference/index.html)\n\n:::\n\n\n## A Voronoi partition for projected Iris dataset\n\n\n::: {.columns}\n\n::: {.column width=\"30%\"}\nThe black points marked with a cross define three centroids.\n\nThe straight lines delimit the Voronoï cells defined by the three centroids.\n\nThe colored points come from the Iris dataset:\neach point is colored according to the the cell it belongs to.\n\n:::\n\n\n::: {.column}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides-kmeans_files/figure-revealjs/irisvoronoi-1.png){width=960}\n:::\n:::\n\n\n\n:::\n\n\n::: \n\n## Adding centroids\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides-kmeans_files/figure-revealjs/sugar-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n## *k*-means objective function\n\n\nThe $k$-means algorithm aims at building a *codebook* $\\mathcal{C}$ that minimizes\n\n\n$\\mathcal{C} \\mapsto \\sum_{i=1}^n \\min_{c \\in \\mathcal{C}}  \\norm X_i - c \\norm_2^2$\n\n\nover all codebooks with given cardinality\n\n\n\n\n\nIf $c \\in \\mathcal{C}$ is the closest centroid to $X \\in \\mathbb{R}^p$,\n\n$$\\|c - X\\|^2$$ \n\nis the _quantization/reconstruction error_ suffered when using codebook $\\mathcal{C}$ to approximate $X$\n\n{{< fa exclamation-triangle >}} If there are no restrictions on the dimension of the input space, on the number of centroids, or on sample size, computing an optimal codebook is a $\\text{NP}$ -hard problem\n\n\n\n\n## $k$ -means at work\n\n::: {.columns}\n\n::: {.column width=\"30%\"}\n\nWe may figure out what an optimized Voronoï partition  looks like on the Iris dataset\n\n`kmeans` with $k=3$ on the Iris dataset\n\nFunction `kmeans` is run with default arguments\n\n:::\n\n\n::: {.column}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides-kmeans_files/figure-revealjs/iriskmeans3-1.png){width=960}\n:::\n:::\n\n\n\nWe chose the `Sepal` plane for clustering and visualization\n\nThis is arbitrary. We could have chosen a `Petal`  plane, a `Width` plane, or a plane defined by principal axes.\n\n:::\n\n::: \n\n\n \n\n## A $k$-means clustering is completely characterized by the $k$ centroids\n\nOnce centroids are known, clusters can be recovered by searching the closest\ncentroid for each sample point (that is by delimiting the Voronoï cells).\n\n- How can we assess the _quality_ of a $k$-means clustering?\n\n- Can we compare the clusterings achieved by picking different values of $k$?\n\nThere is no obvious assessment criterion!\n\n\n## \n\nThe _quality_ of a clustering can be appreciated according to a wide variety of performance indicators\n\n- Distortion: this is the $k$-means cost\n- Shape of clusters\n- Relevance of clusters\n- Stability: does clustering depend on few points?\n\n\n\n## Caveat\n\nWhen visualizing $k$-means clustering on `Iris` data, we are cheating.  {{< fa theater-masks >}}\n\nWe have a gold standard classification delivered by botanists\n\nThe botanists classification can be challenged\n\nWe can compare classification originating from _phenotypes_ (appearance) and classification based on _phylogeny_ (comparing DNAs)  {{< fa dna >}}\n\n \n\n## Summarising a $k$-means clustering\n\n::: {.columns}\n::: {.column width=\"30%\"}\n\nA clustering can be summarized and illustrated.\n\nIn {{< fa r-project >}} A meaningful summary is provided\nby the generic function `summary()`, or a `tidy` summary is providede by\n`broom::tidy(...)`\n\n\n\n:::\n\n\n::: {.column}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"mqqfkvxtkg\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#mqqfkvxtkg table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#mqqfkvxtkg thead, #mqqfkvxtkg tbody, #mqqfkvxtkg tfoot, #mqqfkvxtkg tr, #mqqfkvxtkg td, #mqqfkvxtkg th {\n  border-style: none;\n}\n\n#mqqfkvxtkg p {\n  margin: 0;\n  padding: 0;\n}\n\n#mqqfkvxtkg .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#mqqfkvxtkg .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#mqqfkvxtkg .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#mqqfkvxtkg .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#mqqfkvxtkg .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#mqqfkvxtkg .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#mqqfkvxtkg .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#mqqfkvxtkg .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#mqqfkvxtkg .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#mqqfkvxtkg .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#mqqfkvxtkg .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#mqqfkvxtkg .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#mqqfkvxtkg .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#mqqfkvxtkg .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#mqqfkvxtkg .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#mqqfkvxtkg .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#mqqfkvxtkg .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#mqqfkvxtkg .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#mqqfkvxtkg .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mqqfkvxtkg .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#mqqfkvxtkg .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#mqqfkvxtkg .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#mqqfkvxtkg .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mqqfkvxtkg .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#mqqfkvxtkg .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#mqqfkvxtkg .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#mqqfkvxtkg .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mqqfkvxtkg .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#mqqfkvxtkg .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#mqqfkvxtkg .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#mqqfkvxtkg .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#mqqfkvxtkg .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#mqqfkvxtkg .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mqqfkvxtkg .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#mqqfkvxtkg .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mqqfkvxtkg .gt_left {\n  text-align: left;\n}\n\n#mqqfkvxtkg .gt_center {\n  text-align: center;\n}\n\n#mqqfkvxtkg .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#mqqfkvxtkg .gt_font_normal {\n  font-weight: normal;\n}\n\n#mqqfkvxtkg .gt_font_bold {\n  font-weight: bold;\n}\n\n#mqqfkvxtkg .gt_font_italic {\n  font-style: italic;\n}\n\n#mqqfkvxtkg .gt_super {\n  font-size: 65%;\n}\n\n#mqqfkvxtkg .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#mqqfkvxtkg .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#mqqfkvxtkg .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#mqqfkvxtkg .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#mqqfkvxtkg .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#mqqfkvxtkg .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#mqqfkvxtkg .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#mqqfkvxtkg .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#mqqfkvxtkg div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Sepal.Length\">Sepal.Length</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Sepal.Width\">Sepal.Width</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"size\">size</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"withinss\">withinss</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"cluster\">cluster</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Sepal.Length\" class=\"gt_row gt_right\">6.81</td>\n<td headers=\"Sepal.Width\" class=\"gt_row gt_right\">3.07</td>\n<td headers=\"size\" class=\"gt_row gt_right\">47.00</td>\n<td headers=\"withinss\" class=\"gt_row gt_right\">12.62</td>\n<td headers=\"cluster\" class=\"gt_row gt_center\">1</td></tr>\n    <tr><td headers=\"Sepal.Length\" class=\"gt_row gt_right\">5.01</td>\n<td headers=\"Sepal.Width\" class=\"gt_row gt_right\">3.43</td>\n<td headers=\"size\" class=\"gt_row gt_right\">50.00</td>\n<td headers=\"withinss\" class=\"gt_row gt_right\">13.13</td>\n<td headers=\"cluster\" class=\"gt_row gt_center\">2</td></tr>\n    <tr><td headers=\"Sepal.Length\" class=\"gt_row gt_right\">5.77</td>\n<td headers=\"Sepal.Width\" class=\"gt_row gt_right\">2.69</td>\n<td headers=\"size\" class=\"gt_row gt_right\">53.00</td>\n<td headers=\"withinss\" class=\"gt_row gt_right\">11.30</td>\n<td headers=\"cluster\" class=\"gt_row gt_center\">3</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\nThe concise summary  tells us the number of points that are assigned to each cluster, and the Within Sum of Squares (WNSS). It says something\nabout inner homogeneity and (apparently) nothing about outer homogeneity\n\n\n:::\n::: \n\n \n\n## $k$-means with $k=2$\n\n::: {.columns}\n::: {.column  width=\"30%\"}\n\nWe pursue the exploration of `kmeans` by building another clustering for Iris dataset.\n\nThis times  with $k=2$.\n\n:::\n\n::: {.column}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides-kmeans_files/figure-revealjs/iriskmeans2-1.png){width=960}\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"gyttypxtad\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#gyttypxtad table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#gyttypxtad thead, #gyttypxtad tbody, #gyttypxtad tfoot, #gyttypxtad tr, #gyttypxtad td, #gyttypxtad th {\n  border-style: none;\n}\n\n#gyttypxtad p {\n  margin: 0;\n  padding: 0;\n}\n\n#gyttypxtad .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#gyttypxtad .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#gyttypxtad .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#gyttypxtad .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#gyttypxtad .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#gyttypxtad .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#gyttypxtad .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#gyttypxtad .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#gyttypxtad .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#gyttypxtad .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#gyttypxtad .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#gyttypxtad .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#gyttypxtad .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#gyttypxtad .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#gyttypxtad .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#gyttypxtad .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#gyttypxtad .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#gyttypxtad .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#gyttypxtad .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gyttypxtad .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#gyttypxtad .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#gyttypxtad .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#gyttypxtad .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gyttypxtad .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#gyttypxtad .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#gyttypxtad .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#gyttypxtad .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gyttypxtad .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#gyttypxtad .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#gyttypxtad .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#gyttypxtad .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#gyttypxtad .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#gyttypxtad .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gyttypxtad .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#gyttypxtad .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gyttypxtad .gt_left {\n  text-align: left;\n}\n\n#gyttypxtad .gt_center {\n  text-align: center;\n}\n\n#gyttypxtad .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#gyttypxtad .gt_font_normal {\n  font-weight: normal;\n}\n\n#gyttypxtad .gt_font_bold {\n  font-weight: bold;\n}\n\n#gyttypxtad .gt_font_italic {\n  font-style: italic;\n}\n\n#gyttypxtad .gt_super {\n  font-size: 65%;\n}\n\n#gyttypxtad .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#gyttypxtad .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#gyttypxtad .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#gyttypxtad .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#gyttypxtad .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#gyttypxtad .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#gyttypxtad .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#gyttypxtad .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#gyttypxtad div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Sepal.Length\">Sepal.Length</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Sepal.Width\">Sepal.Width</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"size\">size</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"withinss\">withinss</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"cluster\">cluster</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Sepal.Length\" class=\"gt_row gt_right\">5.22</td>\n<td headers=\"Sepal.Width\" class=\"gt_row gt_right\">3.13</td>\n<td headers=\"size\" class=\"gt_row gt_right\">83.00</td>\n<td headers=\"withinss\" class=\"gt_row gt_right\">35.09</td>\n<td headers=\"cluster\" class=\"gt_row gt_center\">1</td></tr>\n    <tr><td headers=\"Sepal.Length\" class=\"gt_row gt_right\">6.61</td>\n<td headers=\"Sepal.Width\" class=\"gt_row gt_right\">2.97</td>\n<td headers=\"size\" class=\"gt_row gt_right\">67.00</td>\n<td headers=\"withinss\" class=\"gt_row gt_right\">23.11</td>\n<td headers=\"cluster\" class=\"gt_row gt_center\">2</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n:::\n::: \n\n\n\n\n\n\n \n\n## {{< fa question >}} How should we pick $k$?\n\n::: {.columns}\n::: {.column width=\"30%\"}\n\nEven if we could compute a provably  optimal codebook for each $k$,\nchoosing $k$ would not be obvious\n\nA common recipe consists of\nplotting within clusters sum of squares (`WNSS`) against $k$\n\nWithin clusters sum of squares (WNSS) decreases sharply between $k=2$ and $k=3$\n\nFor larger values of $k$, the decay is much smaller.\n\nThe _elbow_ rule of thumb suggests to choose $k=3$.\n\n:::\n\n\n\n::: {.column}\n\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\nWe have run  `kmeans` over the Iris dataset, \nfor $k$ in range $2, \\ldots, 10$. For each value of $k$,  we performed $32$ randomized initializations, and chose the partition that minimizes within clusters sum of squares\n\n:::\n::: \n\n\n\n\n \n\n## Incentive to choose $k=4$?\n\n::: {.columns}\n::: {.column width=\"30%\"}\n\nDepending on initialization, taking $k=4$ creates a cluster at the boundary between `versicolor` and `virginica` or it may split the `setosa` cluster\n\n:::\n::: {.column}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides-kmeans_files/figure-revealjs/iriskmeans4-1.png){width=960}\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"yhhkpsmaza\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#yhhkpsmaza table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#yhhkpsmaza thead, #yhhkpsmaza tbody, #yhhkpsmaza tfoot, #yhhkpsmaza tr, #yhhkpsmaza td, #yhhkpsmaza th {\n  border-style: none;\n}\n\n#yhhkpsmaza p {\n  margin: 0;\n  padding: 0;\n}\n\n#yhhkpsmaza .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#yhhkpsmaza .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#yhhkpsmaza .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#yhhkpsmaza .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#yhhkpsmaza .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#yhhkpsmaza .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yhhkpsmaza .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#yhhkpsmaza .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#yhhkpsmaza .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#yhhkpsmaza .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#yhhkpsmaza .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#yhhkpsmaza .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#yhhkpsmaza .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#yhhkpsmaza .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#yhhkpsmaza .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#yhhkpsmaza .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#yhhkpsmaza .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#yhhkpsmaza .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#yhhkpsmaza .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yhhkpsmaza .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#yhhkpsmaza .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#yhhkpsmaza .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#yhhkpsmaza .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yhhkpsmaza .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#yhhkpsmaza .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#yhhkpsmaza .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yhhkpsmaza .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yhhkpsmaza .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#yhhkpsmaza .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yhhkpsmaza .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#yhhkpsmaza .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yhhkpsmaza .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#yhhkpsmaza .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yhhkpsmaza .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#yhhkpsmaza .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yhhkpsmaza .gt_left {\n  text-align: left;\n}\n\n#yhhkpsmaza .gt_center {\n  text-align: center;\n}\n\n#yhhkpsmaza .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#yhhkpsmaza .gt_font_normal {\n  font-weight: normal;\n}\n\n#yhhkpsmaza .gt_font_bold {\n  font-weight: bold;\n}\n\n#yhhkpsmaza .gt_font_italic {\n  font-style: italic;\n}\n\n#yhhkpsmaza .gt_super {\n  font-size: 65%;\n}\n\n#yhhkpsmaza .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#yhhkpsmaza .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#yhhkpsmaza .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#yhhkpsmaza .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#yhhkpsmaza .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#yhhkpsmaza .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#yhhkpsmaza .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#yhhkpsmaza .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#yhhkpsmaza div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Sepal.Length\">Sepal.Length</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Sepal.Width\">Sepal.Width</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"size\">size</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"withinss\">withinss</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"cluster\">cluster</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Sepal.Length\" class=\"gt_row gt_right\">5.518182</td>\n<td headers=\"Sepal.Width\" class=\"gt_row gt_right\">2.606061</td>\n<td headers=\"size\" class=\"gt_row gt_right\">33</td>\n<td headers=\"withinss\" class=\"gt_row gt_right\">5.967879</td>\n<td headers=\"cluster\" class=\"gt_row gt_center\">1</td></tr>\n    <tr><td headers=\"Sepal.Length\" class=\"gt_row gt_right\">5.016327</td>\n<td headers=\"Sepal.Width\" class=\"gt_row gt_right\">3.451020</td>\n<td headers=\"size\" class=\"gt_row gt_right\">49</td>\n<td headers=\"withinss\" class=\"gt_row gt_right\">11.569388</td>\n<td headers=\"cluster\" class=\"gt_row gt_center\">2</td></tr>\n    <tr><td headers=\"Sepal.Length\" class=\"gt_row gt_right\">7.283333</td>\n<td headers=\"Sepal.Width\" class=\"gt_row gt_right\">3.133333</td>\n<td headers=\"size\" class=\"gt_row gt_right\">18</td>\n<td headers=\"withinss\" class=\"gt_row gt_right\">3.905000</td>\n<td headers=\"cluster\" class=\"gt_row gt_center\">3</td></tr>\n    <tr><td headers=\"Sepal.Length\" class=\"gt_row gt_right\">6.350000</td>\n<td headers=\"Sepal.Width\" class=\"gt_row gt_right\">2.942000</td>\n<td headers=\"size\" class=\"gt_row gt_right\">50</td>\n<td headers=\"withinss\" class=\"gt_row gt_right\">6.786800</td>\n<td headers=\"cluster\" class=\"gt_row gt_center\">4</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n:::\n::: \n\n \n\n## Initialization matters!\n\n::: {.columns}\n::: {.column width=\"30%\"}\n\n- Initialize by samples.\n\n- `k-Mean++`  try to take them as separated as possible.\n\n- No guarantee to converge to a global optimum!\n\n- Trial and error.\n\n- Repeat and keep the best result.\n\n:::\n::: {.column}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkmeans(x,       # data\n       centers, # initial centroids or number of clusters\n       iter.max = 10,\n       nstart = 1,  # number of trials\n       algorithm = c(\"Hartigan-Wong\", # default\n                     \"Lloyd\",         #<< old one\n                     \"Forgy\",\n                     \"MacQueen\"),\n       trace=FALSE)\n```\n:::\n\n\n\n:::\n::: \n\n\n\n\n#  Lloyd's Algorithm  {background-color=\"#1c191c\"}\n\n \n\n## Lloyd's Algorithm (detailed) for fixed _k_ (naive _k_-means)\n\n1. Initialize\n  Choose $k$ centroids\n\n2. Iterations: Two phases\n  1. (Movement) Assign each sample point to the closest _centroid_\n    Assign each sample point to a class in the Voronoi partition defined by the centroids\n  1. (Update) For each class in the current Voronoi partition, \n     update the  *centroid* so as to minimize the Within Cluster Sum of Squared distances.\n\n\n\n\n## Lloyd's iterations\n\n\n\n::: {.cell}\n\n:::\n\n\n\n## After 1 step\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides-kmeans_files/figure-revealjs/lloyd1-1.png){width=960}\n:::\n:::\n\n\n\n \n\n## Lloyd's iterations after 2 steps \n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides-kmeans_files/figure-revealjs/lloyd5-1.png){width=960}\n:::\n:::\n\n\n\n \n\n## Lloyd's iterations after 4 steps\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides-kmeans_files/figure-revealjs/lloyd00-1.png){width=960}\n:::\n:::\n\n\n\n \n# Lloyd's algorithm (analysis)  {background-color=\"#1c191c\"}\n\n## Analysis\n\nGiven\n\n- codebook $\\mathcal{C} =\\big\\{c_1, \\ldots, c_k\\big\\}$ and\n- clusters $C_1, \\ldots C_k$,\n\nthe  _within-clusters sum of squares_ is defined as\n\n$\\sum_{j=1}^k  \\sum_{i: X_i \\in C_j} \\bigg\\Vert c_j - X_i \\bigg\\Vert^2$\n\n{{< fa hand-point-right >}} This is also the kmeans cost\n\n## \n\n::: {.callout-important title=\"Lemma\"}\n\nAt each stage, the _within clusters sums of squares_ does not increase\n\n:::\n\n\n\n## Proof\n\nLet $\\mathcal{C}^{(t)} =\\big\\{ c^{(t)}_1, \\ldots, c_k^{(t)}\\big\\}$ be the codebook after $t$ steps\n\nLet $\\big({C}^{(t)}_j\\big)_{j \\leq k}$ be the clusters after $t$ steps\n\n- Centroids at step $t+1$ are the barycenters of clusters $\\big({C}^{(t)}_j\\big)_{j \\leq k}$\n\n$c^{(t+1)}_j = \\frac{1}{|C_j^{(t)}|} \\sum_{X_i \\in C^{(t)}_j} X_i$\n\n- Clusters $C^{(t+1)}_j$ are defined by\n\n$C^{(t+1)}_j = \\bigg\\{ X_i : \\Vert X_i -  c^{(t+1)}_j\\Vert = \\min_{c \\in \\mathcal{C}^{(t+1)}} \\Vert X_i -  c\\Vert \\bigg\\}$\n\nEach sample point is assigned to the closest centroid\n\n \n\n\n## Proof (continued)\n\n$$\\sum_{j=1}^k \\sum_{X_i \\in C^{(t)}_j} \\bigg\\Vert c^{(t)}_j  - X_i\\bigg\\Vert^2  \\geq \\sum_{j=1}^k \\sum_{X_i \\in C^{(t)}_j} \\bigg\\Vert c^{(t+1)}_j  - X_i\\bigg\\Vert^2$$\n\nsince for each $j$, the mean $c^{(t+1)}_j$ minimizes the average square distance to points in $C^{(t)}_j$\n\n$$\\sum_{j=1}^k \\sum_{X_i \\in C^{(t)}_j} \\bigg\\Vert c^{(t+1)}_j  - X_i\\bigg\\Vert^2 \\geq \\sum_{j=1}^k \\sum_{X_i \\in C^{(t)}_j} \\min_{c \\in \\mathcal{C}^{(t+1)}}\\bigg\\Vert c  - X_i\\bigg\\Vert^2$$\n\n$$\\sum_{j=1}^k \\sum_{X_i \\in C^{(t)}_j} \\min_{c \\in \\mathcal{C}^{(t+1)}}\\bigg\\Vert c  - X_i\\bigg\\Vert^2 = \\sum_{j=1}^k \\sum_{X_i \\in C^{(t+1)}_j} \\bigg\\Vert c^{(t+1)}_j  - X_i\\bigg\\Vert^2$$\n\n\n\n{{< fa square >}}\n\n\n\n\n \n\n## {{< fa code-branch >}} Variants of _k_-means\n\nImplementations of  $k$-means vary with respect to\n\n- Initialization\n  + `k-means++`\n  + Forgy : pick initial centroids at random from the dataset\n  + Random partition : pick a random partition of the dataset and initialize centroids by computing means in each class\n  + ...\n\n- Movement/assignment\n  + Naive $k$ means uses  brute-force search for closest centroid. Each step requires $\\Omega(n \\times k)$ operations\n  + Elkan (used by {{< fa python >}} `scikit-learn`)\n  + Hartigan-Wong {{< fa r-project >}} default\n  + ...\n\n\n::: {.notes}\n\n> Lloyd's algorithm is the standard approach for this problem. However, it spends a lot of processing time computing the distances between each of the k cluster centers and the n data points. Since points usually stay in the same clusters after a few iterations, much of this work is unnecessary, making the naïve implementation very inefficient. Some implementations use caching and the triangle inequality in order to create bounds and accelerate Lloyd's algorithm. .fr.f6[Wikipedia]\n\n\nIn base {{< fa r-project >}}, `kmeans` is a wrapper for different but related algorithms.\n\nLloyd's algorithm is the first and simplest versions of a series of heuristic methods designed to minimize the k-means cost\n\n- `MacQueen`  modify the mean each time a sample is assigned to a new cluster\n\n- `Hartigan-Wong` is the _default_ method. It modifies the mean by removing the considered\nsample point, assign it to the nearby center and recompute the new mean after assignment.\n\n- `Forgy`\n\n:::\n \n\n\n# Combining PCA and $k$-means  {background-color=\"#1c191c\"}\n\n \n\n## {{< fa binoculars >}}\n\nThe result of a clustering procedure like `kmeans` can be visualized by projecting the dataset on a pair of native variables and  using some aesthetics to emphasize the clusters\n\n\nThis is not always the best way.\n\nFirst choosing a pair of native variables may not be straightforward. The projected pairwise distances may not faithfully reflect the pairwise distances that serve for clustering.\n\nIt makes sense to project the dataset\nof the $2$-dimensional subspace that maximizes the projected inertia, that is on the space generated\nby the first two principal components\n\n \n\n## PCA, projection, $k$-means\n\n::: {.columns}\n\n::: {.column width=\"30%\"}\n\nThe kmeans clustering of the Iris dataset is projected on the first two principal components: `prcomp` is used to perform PCA with neither centering nor scaling\n\n`kmeans` is applied to the rotated data\n\n\n:::\n\n\n::: {.column}\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides-kmeans_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n\n{{< fa hand-point-right >}} The straight lines are the not the projections of the boundaries of the (4-dimensional) Voronoï cells defined by the clusters centroids, but the boundaries of the 2-dimensional Voronoï celles defined by the projections of the cluster centroids\n\n:::\n::: \n\n\n\n \n\n## {{< fa question >}} Questions around _k_-means\n\n- Choosing $k$\n\n- Assessing clustering quality\n\n- Scaling or not scaling ?\n\n- Choosing a distance\n\n- Initialization methods\n\n- Movement/assignment update\n\n- Stopping rules\n\n\n\n \n\n## {{< fa bullhorn >}} Conclusion\n\n- Euclidean distance is used as a metric and inertia is used as a measure of cluster scatter\n\n- The number of clusters $k$ is an input parameter\n\n- Convergence to a local minimum may produce counterintuitive (\"wrong\") results\n\n\n\n\n \n\n\n\n\n\n\n\n\n \n\n# The End   {background-color=\"#1c191c\"}",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}